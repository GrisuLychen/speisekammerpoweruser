[
    {
        "id": "df2a5801fca17d05",
        "type": "tab",
        "label": "Speisekammer",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "1ec82cc6ff4d7812",
        "type": "http request",
        "z": "df2a5801fca17d05",
        "name": "Get Community",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 560,
        "y": 560,
        "wires": [
            [
                "623147fbf37d1258"
            ]
        ]
    },
    {
        "id": "623147fbf37d1258",
        "type": "function",
        "z": "df2a5801fca17d05",
        "name": "function 52",
        "func": "flow.set(\"ComID\",msg.payload[0].id)\nvar setupnummer = flow.get(\"setupnr\") + 1 ?? 0\nmsg.payload = \"Setup \" + setupnummer + \" geladen, \"+\"Community gefunden: \" + msg.payload[0].name\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 520,
        "wires": [
            [
                "eccc904243d12c40",
                "91bef64683715b98"
            ]
        ]
    },
    {
        "id": "7d76ccd94abf4752",
        "type": "http request",
        "z": "df2a5801fca17d05",
        "name": "Get Storage Locations",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 600,
        "y": 680,
        "wires": [
            [
                "d83b0c56de2297c7",
                "e2cbd07a40e1b984"
            ]
        ]
    },
    {
        "id": "ab25e4312da60a62",
        "type": "debug",
        "z": "df2a5801fca17d05",
        "name": "debug 62",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1000,
        "y": 640,
        "wires": []
    },
    {
        "id": "d83b0c56de2297c7",
        "type": "function",
        "z": "df2a5801fca17d05",
        "name": "function 54",
        "func": "flow.set(\"StorLocations\", msg.payload[0].id)\nvar lagerorte = msg.payload\nflow.set(\"Lagerorte\",lagerorte);\nvar options = [];\nvar entry ={};\nlet count = msg.payload.length\nvar name \nvar id\n\nfor (let x = 0; x < count; x++) {\n    name = msg.payload[x].name;\n    id = msg.payload[x].id;\n    options.push({ [name]: id }); \n    if (name==\"Gruppen\"){\n        flow.set(\"Gruppenlager\",id)\n    }   \n}\nmsg = { payload: msg.payload.length };\nmsg.payload = lagerorte[0].id;\nmsg.store = lagerorte[0].id;\nmsg.options=options;\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 680,
        "wires": [
            [
                "a887b0cfca944396",
                "ab25e4312da60a62"
            ]
        ]
    },
    {
        "id": "91bef64683715b98",
        "type": "function",
        "z": "df2a5801fca17d05",
        "name": "function 55",
        "func": "var community = flow.get(\"ComID\")\nvar webside = flow.get(\"webside\")\nvar token = flow.get(\"token\")\nmsg={};\nmsg.url = webside + \"/communities/\" + community +\"/storage-locations\"\nmsg.headers = {};\nmsg.headers['Authorization'] = 'Bearer '+token;\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 680,
        "wires": [
            [
                "7d76ccd94abf4752"
            ]
        ]
    },
    {
        "id": "27a399157ba3d895",
        "type": "http request",
        "z": "df2a5801fca17d05",
        "name": "Get Stock",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 620,
        "y": 840,
        "wires": [
            [
                "583a816996765a2c",
                "ceebe38846e45f1f"
            ]
        ]
    },
    {
        "id": "da2c3029d588e485",
        "type": "inject",
        "z": "df2a5801fca17d05",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 240,
        "y": 780,
        "wires": [
            [
                "dc0e732f8685201c"
            ]
        ]
    },
    {
        "id": "583a816996765a2c",
        "type": "debug",
        "z": "df2a5801fca17d05",
        "name": "debug 63",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 780,
        "y": 820,
        "wires": []
    },
    {
        "id": "dc0e732f8685201c",
        "type": "function",
        "z": "df2a5801fca17d05",
        "name": "function 57",
        "func": "var community = flow.get(\"ComID\")\nvar webside = flow.get(\"webside\")\nvar token = flow.get(\"token\")\nvar storage = flow.get(\"StorLocations\")\n\nmsg.url = webside + \"/stock/\" + community + \"/\" + storage;\nmsg.headers = {};\nmsg.headers['Authorization'] = 'Bearer ' + token;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 840,
        "wires": [
            [
                "27a399157ba3d895"
            ]
        ]
    },
    {
        "id": "a540911a66fe9125",
        "type": "function",
        "z": "df2a5801fca17d05",
        "name": "function 58",
        "func": "//var webside = \"https://staging.api.speisekammer.app\"\n//var token = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOiJZdDR3M2l5M3VoZ0o1UmVTWlk0ZlBmVDd2YkczIiwicm9sZXMiOlsid3JpdGUiXSwiaWF0IjoxNzA2NTM5NDUyLCJleHAiOjE3MzgwOTcwNTJ9.-FwWTTSQXNVl9SrA6TnMi9e9fnUkXPPg1HeKs_XHuDc\"\n\nvar webside = msg.payload.url\nvar token = msg.payload.token\n\nflow.set(\"webside\",webside)\nflow.set(\"token\",token)\n\nmsg.url = webside+\"/communities\"\nmsg.headers = {};\nmsg.headers['Authorization'] = 'Bearer '+token;\n\nreturn msg;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 560,
        "wires": [
            [
                "1ec82cc6ff4d7812"
            ]
        ]
    },
    {
        "id": "693c713b704bf04f",
        "type": "ui_text_input",
        "z": "df2a5801fca17d05",
        "name": "",
        "label": "Barcode",
        "tooltip": "",
        "group": "b5196438b63bee02",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "text",
        "delay": "0",
        "topic": "topic",
        "sendOnBlur": false,
        "className": "",
        "topicType": "msg",
        "x": 220,
        "y": 1760,
        "wires": [
            [
                "bfbb88aaddeb800c",
                "9e20a2cff7a5d372"
            ]
        ]
    },
    {
        "id": "bfbb88aaddeb800c",
        "type": "delay",
        "z": "df2a5801fca17d05",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 220,
        "y": 1820,
        "wires": [
            [
                "3410dfea7618591b"
            ]
        ]
    },
    {
        "id": "3410dfea7618591b",
        "type": "function",
        "z": "df2a5801fca17d05",
        "name": "clear",
        "func": "msg.payload=\"\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 1860,
        "wires": [
            [
                "693c713b704bf04f"
            ]
        ]
    },
    {
        "id": "caeadd440daf9b59",
        "type": "ui_audio",
        "z": "df2a5801fca17d05",
        "name": "",
        "group": "b5196438b63bee02",
        "voice": "Microsoft Katja - German (Germany)",
        "always": true,
        "x": 820,
        "y": 2240,
        "wires": []
    },
    {
        "id": "9e20a2cff7a5d372",
        "type": "function",
        "z": "df2a5801fca17d05",
        "name": "Check Barcode",
        "func": "msg.gtin=msg.payload\n\nswitch (msg.payload[0]) {\n    case \"$\":\n\n        return [null, msg, null]\n   \n    case \"#\":\n        return [null, null, msg]\n\n    default:\n        return [msg,null,null]\n\n}\n\n",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 1820,
        "wires": [
            [
                "3b8d0460e2d976a5",
                "837252d960e299c8"
            ],
            [
                "e4a6c773a8a4e8f4",
                "0f822ee22b35fdbe"
            ],
            [
                "e66f4dea5563f673",
                "84064c67e828f0fc"
            ]
        ]
    },
    {
        "id": "8b3f31fd3e6cdfd1",
        "type": "ui_template",
        "z": "df2a5801fca17d05",
        "group": "b5196438b63bee02",
        "name": "",
        "order": 3,
        "width": 0,
        "height": 0,
        "format": "<script>\n    var el = document.querySelectorAll(\"input[type=\\\"text\\\"\")[0],\n    \n        setFocus = function() {\n            if (el) {\n                el.focus();\n            }\n            \n            setTimeout(setFocus, 100);\n        };\n    \n    setFocus();\n    \n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 800,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "a570939fa680b3b7",
        "type": "ui_button",
        "z": "df2a5801fca17d05",
        "name": "",
        "group": "b5196438b63bee02",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Erfassung",
        "tooltip": "",
        "color": "",
        "bgcolor": "{{msg.bgcolor}}",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 380,
        "y": 2240,
        "wires": [
            [
                "873df93a4654a32d"
            ]
        ]
    },
    {
        "id": "f1d279e67f679107",
        "type": "ui_button",
        "z": "df2a5801fca17d05",
        "name": "",
        "group": "b5196438b63bee02",
        "order": 9,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Ausgabe",
        "tooltip": "",
        "color": "",
        "bgcolor": "{{msg.bgcolor}}",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 380,
        "y": 2280,
        "wires": [
            [
                "625c40bc23279aa2"
            ]
        ]
    },
    {
        "id": "873df93a4654a32d",
        "type": "function",
        "z": "df2a5801fca17d05",
        "name": "function 62",
        "func": "msg.payload= \"Erfassung\"\nflow.set(\"FunktionStatus\", 1)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 2240,
        "wires": [
            [
                "caeadd440daf9b59",
                "c05bab02ca2774eb"
            ]
        ]
    },
    {
        "id": "625c40bc23279aa2",
        "type": "function",
        "z": "df2a5801fca17d05",
        "name": "function 63",
        "func": "msg.payload= \"Ausgabe\"\nflow.set(\"FunktionStatus\", 2)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 2280,
        "wires": [
            [
                "caeadd440daf9b59",
                "c05bab02ca2774eb"
            ]
        ]
    },
    {
        "id": "a887b0cfca944396",
        "type": "ui_dropdown",
        "z": "df2a5801fca17d05",
        "name": "Dropdown Lagerort",
        "label": "Lagerort auswählen:",
        "tooltip": "",
        "place": "Select option",
        "group": "b5196438b63bee02",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 1150,
        "y": 680,
        "wires": [
            [
                "3ece44673ab72f67",
                "483bb143ce01448e",
                "26f769c86153a6c3"
            ]
        ]
    },
    {
        "id": "3ece44673ab72f67",
        "type": "function",
        "z": "df2a5801fca17d05",
        "name": "function 64",
        "func": "flow.set(\"StorLocations\", msg.payload)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1350,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "483bb143ce01448e",
        "type": "debug",
        "z": "df2a5801fca17d05",
        "name": "debug 64",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1340,
        "y": 640,
        "wires": []
    },
    {
        "id": "07f42fab39cd1922",
        "type": "ui_button",
        "z": "df2a5801fca17d05",
        "name": "",
        "group": "1ef0514ec8cc871c",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Aktualisiere Lager",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 190,
        "y": 680,
        "wires": [
            [
                "91bef64683715b98"
            ]
        ]
    },
    {
        "id": "c1c46c6bd2fafbc5",
        "type": "ui_button",
        "z": "df2a5801fca17d05",
        "name": "",
        "group": "b5196438b63bee02",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Liste anzeigen",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 240,
        "y": 840,
        "wires": [
            [
                "dc0e732f8685201c"
            ]
        ]
    },
    {
        "id": "0cabac38e8120452",
        "type": "ui_table",
        "z": "df2a5801fca17d05",
        "group": "b5196438b63bee02",
        "name": "",
        "order": 6,
        "width": "19",
        "height": "7",
        "columns": [],
        "outputs": 0,
        "cts": false,
        "x": 1210,
        "y": 840,
        "wires": []
    },
    {
        "id": "ceebe38846e45f1f",
        "type": "function",
        "z": "df2a5801fca17d05",
        "name": "Prepare Table",
        "func": "var options = [];\nlet length = msg.payload.length\nvar name\nvar gtin\nvar count\nvar bestbefore\nvar description\n\n\nfor (let x = 0; x < length; x++) {\n    \n    name = msg.payload[x].name;\n    gtin = msg.payload[x].gtin;\n    count = msg.payload[x].attributes[0].count\n    bestbefore = msg.payload[x].attributes[0].bestBeforeDate\n    description = msg.payload[x].description??\"\";\n    if (typeof bestbefore == \"undefined\"){\n        bestbefore=\"-\"\n    }\n    options.push({ \"Name\": name, \"Barcode\": gtin, \"Anzahl\": count, \"Ablaufdatum\":bestbefore ,\"Beschreibung\":description});    \n    if (msg.payload[x].attributes.length>1){\n\n        for (let y = 1; y < msg.payload[x].attributes.length; y++) {\n            count = msg.payload[x].attributes[y].count\n            bestbefore = msg.payload[x].attributes[y].bestBeforeDate\n            if (typeof bestbefore == \"undefined\") {\n                bestbefore = \"-\"\n            }\n            options.push({ \"Name\": \"+\", \"Barcode\": \"+\", \"Anzahl\": count, \"Ablaufdatum\": bestbefore });\n        }\n    }\n\n }\nmsg = { payload: msg.payload.length };\nmsg.payload = options;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 840,
        "wires": [
            [
                "0cabac38e8120452",
                "a9cc26e6a4593d90"
            ]
        ]
    },
    {
        "id": "a9cc26e6a4593d90",
        "type": "debug",
        "z": "df2a5801fca17d05",
        "name": "debug 65",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1220,
        "y": 880,
        "wires": []
    },
    {
        "id": "1f022ce2f097762a",
        "type": "http request",
        "z": "df2a5801fca17d05",
        "name": "Get Stock Item",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 620,
        "y": 1060,
        "wires": [
            [
                "5ebc98e010573294",
                "e292d5660da60ad7"
            ]
        ]
    },
    {
        "id": "1b1a1507328009ee",
        "type": "function",
        "z": "df2a5801fca17d05",
        "name": "Get Einzelartikel",
        "func": "var community = flow.get(\"ComID\")\nvar webside = flow.get(\"webside\")\nvar token = flow.get(\"token\")\nvar storage = flow.get(\"StorLocations\")\nvar gtin = flow.get(\"gtinalt\")||0\nvar datum = flow.get(\"MHDDatum\")\n\nif (msg.gtin[0] == \"G\") {\n    msg.url = webside + \"/stock/\" + community + \"/\" + flow.get(\"Gruppenlager\") ?? storage + \"/\" + msg.gtin;\n} else {\n    msg.url = webside + \"/stock/\" + community + \"/\" + storage + \"/\" + msg.gtin;\n}\n\n\n//   'https://staging.api.speisekammer.app/stock/VSIa7KKIsJkA65pqMnDE/32cuZkh3DK3C5Nf74CQm/5000112547825'\nmsg.headers = {};\nmsg.headers['Authorization'] = 'Bearer ' + token;\nflow.set(\"gtintemp\",msg.gtin);\nif(typeof datum!=\"undefined\"){\nif(msg.gtin==gtin){\ndatum.used=false;\n}else{\n    datum.fertig=false;\n    datum.tagfertig=false;\n    datum.monatfertig=false;\n    datum.jahrfertig=false;\n}\nflow.set(\"MHDDatum\", datum)\n}\nflow.set(\"gtinalt\", msg.gtin);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 1060,
        "wires": [
            [
                "1f022ce2f097762a",
                "98e679a5ba8770e3"
            ]
        ]
    },
    {
        "id": "5ebc98e010573294",
        "type": "debug",
        "z": "df2a5801fca17d05",
        "name": "debug 66",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 800,
        "y": 1020,
        "wires": []
    },
    {
        "id": "c1aef9fa386582dc",
        "type": "function",
        "z": "df2a5801fca17d05",
        "name": "Vorbereitung Tabelle",
        "func": "if (typeof msg.payload.status != \"undefined\") {\n    msg.payload=[{\"INFO\":\"- Artikel nicht im Vorrat des Lagerortes -\"}]\n    return [null, msg]\n}\n\n\nmsg.payload =[msg.payload];\n\nreturn [msg, null]",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 900,
        "wires": [
            [
                "3014138be1798775",
                "ceebe38846e45f1f"
            ],
            [
                "3014138be1798775",
                "0cabac38e8120452"
            ]
        ]
    },
    {
        "id": "3014138be1798775",
        "type": "debug",
        "z": "df2a5801fca17d05",
        "name": "debug 67",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1040,
        "y": 900,
        "wires": []
    },
    {
        "id": "fddc574b7f180e59",
        "type": "link in",
        "z": "df2a5801fca17d05",
        "name": "link in 42",
        "links": [
            "1784357cdf144d36",
            "c05bab02ca2774eb"
        ],
        "x": 145,
        "y": 2240,
        "wires": [
            [
                "7219c64ce24782a0"
            ]
        ]
    },
    {
        "id": "85287d42b5670ae4",
        "type": "link in",
        "z": "df2a5801fca17d05",
        "name": "link in 43",
        "links": [
            "1784357cdf144d36",
            "c05bab02ca2774eb"
        ],
        "x": 145,
        "y": 2280,
        "wires": [
            [
                "5bdbade10ce056c8"
            ]
        ]
    },
    {
        "id": "c05bab02ca2774eb",
        "type": "link out",
        "z": "df2a5801fca17d05",
        "name": "EingabeButton",
        "mode": "link",
        "links": [
            "fddc574b7f180e59",
            "85287d42b5670ae4",
            "cf8154f797aa603b",
            "add4c0b1fee25743",
            "01f4172636923fda"
        ],
        "x": 775,
        "y": 2300,
        "wires": []
    },
    {
        "id": "e4a6c773a8a4e8f4",
        "type": "function",
        "z": "df2a5801fca17d05",
        "name": "Manage Function",
        "func": "var befehl = msg.payload.split(\":\")\nvar trigger = { };\nvar ddnlist = { };\nvar audio = { };\n\nswitch (befehl[0]) {\n    case \"$Erfassung\":\n        trigger.payload = true;\n        audio.payload= \"Artikel erfassen\"\n        ddnlist=null\n        flow.set(\"FunktionStatus\", 1)\n        return [trigger, audio, ddnlist]\n        break;\n    case \"$Ausgabe\":\n        trigger.payload = true;\n        audio.payload = \"Artikel ausgaben\"\n        ddnlist = null\n        flow.set(\"FunktionStatus\", 2)\n        return [trigger, audio, ddnlist]\n        break;\n    case \"$Info\":\n        trigger.payload = true;\n        audio.payload = \"Info zu Artikel\"\n        ddnlist = null\n        flow.set(\"FunktionStatus\", 3)\n        return [trigger, audio, ddnlist]\n        break;\n    case \"$Loeschen\":\n        trigger.payload = true;\n        audio.payload = \"Artikel Löschen\"\n        ddnlist = null\n        flow.set(\"FunktionStatus\", 4)\n        return [trigger, audio, ddnlist]\n        break;\n    case \"$Lagerort\":\n        var lagerorte = flow.get(\"Lagerorte\")\n        trigger = null;\n        audio.payload = \"Lagerort \" + lagerorte[befehl[1]-1].name\n        ddnlist.payload = lagerorte[befehl[1]-1].id\n        return [trigger, audio, ddnlist]\n        break;\n\n    case \"$ArtikelOk\":\n        trigger.payload = \"ArtikelOk\";\n        audio = null\n        ddnlist = null\n        return [trigger, audio, ddnlist]\n        break;\n\n    case \"$SetAnlegen\":\n        trigger.payload = \"Set\";\n        audio = null\n        ddnlist = null\n        return [trigger, audio, ddnlist]\n        break;\n    \n    case \"$Gruppe\":\n        trigger.payload = \"Gruppe\";\n        audio = null\n        ddnlist = null\n        return [trigger, audio, ddnlist]\n        break;\n\n    default:\n        trigger = null;\n        audio.payload = \"Funktion wurde nicht erkannt\"\n        ddnlist = null\n        return [trigger, audio, ddnlist]\n}\n\n\n\n",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 1820,
        "wires": [
            [
                "1784357cdf144d36"
            ],
            [
                "ba54cef204545264",
                "0899676bcb20faff"
            ],
            [
                "f7d42e766c5208c7",
                "98a1464e707768e4"
            ]
        ]
    },
    {
        "id": "f7d42e766c5208c7",
        "type": "link out",
        "z": "df2a5801fca17d05",
        "name": "StockNR",
        "mode": "link",
        "links": [
            "0c3227e3f4fd406c"
        ],
        "x": 1065,
        "y": 1860,
        "wires": []
    },
    {
        "id": "0c3227e3f4fd406c",
        "type": "link in",
        "z": "df2a5801fca17d05",
        "name": "link in 46",
        "links": [
            "f7d42e766c5208c7"
        ],
        "x": 1035,
        "y": 720,
        "wires": [
            [
                "a887b0cfca944396"
            ]
        ]
    },
    {
        "id": "98a1464e707768e4",
        "type": "debug",
        "z": "df2a5801fca17d05",
        "name": "debug 68",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1120,
        "y": 1900,
        "wires": []
    },
    {
        "id": "0f822ee22b35fdbe",
        "type": "debug",
        "z": "df2a5801fca17d05",
        "name": "debug 69",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 700,
        "y": 1800,
        "wires": []
    },
    {
        "id": "98e679a5ba8770e3",
        "type": "debug",
        "z": "df2a5801fca17d05",
        "name": "debug 70",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 560,
        "y": 980,
        "wires": []
    },
    {
        "id": "455eb0505e96b7ba",
        "type": "http request",
        "z": "df2a5801fca17d05",
        "name": "PUT Item",
        "method": "PUT",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1000,
        "y": 1180,
        "wires": [
            [
                "abb394b3a396d8ed",
                "ddfd711237f439ab"
            ]
        ]
    },
    {
        "id": "9fddcfa3464f6f98",
        "type": "function",
        "z": "df2a5801fca17d05",
        "name": "Put Änderungen",
        "func": "var item = msg.payload\nvar msg = { payload: msg.payload.length };\nvar community = flow.get(\"ComID\")\nvar webside = flow.get(\"webside\")\nvar token = flow.get(\"token\")\nvar storage = flow.get(\"StorLocations\")\nvar status = flow.get(\"FunktionStatus\");\nvar bestbefore\nvar items=1\nvar description \nvar group = {}\nvar msg2 = {}\n\n// Wenn Artikel nicht gefunden wird kommt ein status 404 zurück daher wird hier manuell\n// ein leeres Item gebaut\nif (typeof item.status != \"undefined\") {\n    item={};\n    item.notfound=true;\n    item.gtin=flow.get(\"gtintemp\");\n    item.name=\"unbekannter Artikel\"\n    item.attributes=[];\n    item.attributes.push({\"count\":0})\n}\n// Wenn es zum Item eine Beschreibung gibt (wenn die Beschreibung nicht nicht beschreiben ist)\n// und wenn an erste Position der Beschreibung ein { zu finden ist also ein JSON Objekt festgelegt wurde\nif ((typeof item.description !=\"undefined\") && item.description[0]==\"{\"){\n    // Wenn dem so ist, dann wird das Json geparst und Objekt gebaut\nvar setinfo = JSON.parse(item.description ?? \"{ \\\"isset\\\": false, \\\"items\\\": 6, \\\"gtin\\\": \\\"13445\\\" , \\\"isingroup\\\": false , \\\"groupgtin\\\" : \\\"abc\\\"}\") // das hintere Objekt ist nur das der Parse nicht knallt\n    if(setinfo.isset){\n        item.gtin = setinfo.gtin ?? item.gtin // entweder es gibt schon ein Info das es ein set ist oder wenn das undefined oder null ist wird die Produkt gtin verwendet\n        items=setinfo.items??1  // auslesen wieviel Items im Set enthalten sind wenn nicht 1\n        group.isingrupe=setinfo.isingroup??false // Gehört der Artikel in eine Gruppe\n        group.gtin = (setinfo.groupgtin??\"Gabc\") // GroupGtin\n    }\n}\n\nflow.set(\"gtintemp\",null); // löschen des temporären gtins welcher gesetzt ist fals der Artiekel nicht bekannt ist ud ein 404 kommt\n\n//Anfrage vorbereiten\nif (item.gtin[0]==\"G\"){ // so soll ein Group Gtin aussehen, erster Buchstabe \"G\"\n    msg.url = webside + \"/stock/\" + community + \"/\" + flow.get(\"Gruppenlager\")??storage; // Wenn es eine Group gTin ist dann ab ins Gruppenlager\n} else {\n    msg.url = webside + \"/stock/\" + community + \"/\" + storage; // sonst das gespeicherte Lager nutzen\n}\n\n// Hier wird die Anfrage zusammen gebaut\nmsg.headers = {};\nmsg.headers['Authorization'] = 'Bearer ' + token;\n\n\n\n//Ab hier kommt die eigentliche Änderung eines bekannten Artikels\nvar attributanzahl = item.attributes.length \n\n// Status 1 Eingabe\nif (status == 1) {\n    var datum = flow.get(\"MHDDatum\")\n     // wenn vorher ein MHD gesetzt wurde wird es genutzt sonst gibts ein Objekt fals dran\n    if (datum.fertig){ // wenn das datum fertig war\n         //datum.used=true; // markieren das das Datum genutzt wurde\n         for (let y = 0; y < attributanzahl; y++){ // durchlaufen aller attribute\n            if (typeof item.attributes[y].bestBeforeDate != \"undefined\") { // wenn ein bestbefore gesetzt ist\n              if (item.attributes[y].bestBeforeDate==datum.mhd){ // wenn das bestbefore gleich dem neu erfassten datum\n                  item.attributes[y].count = item.attributes[y].count + items;  // dann fügen wir hier die items hinzu (nicht nur eins da es ja ein set sein könnte)\n                    break;\n               } \n                 if (y == attributanzahl - 1 && item.attributes[y].bestBeforeDate != datum.mhd) { // wenn das gleiche Datum nicht gefunden wurde und wir schon an der letzten stelle sind\n                  item.attributes.push({ \"count\": items, \"bestBeforeDate\":datum.mhd }); // dann fügen wir ein neues Element der Liste hinzu und nutzten unser neues Datum\n                 break;\n                } \n             } else {\n           }\n             if (typeof item.attributes[y].bestBeforeDate == \"undefined\" && y == attributanzahl - 1)\n                item.attributes.push({ \"count\": items, \"bestBeforeDate\": datum.mhd }); // wir haben die ganze Liste durchsucht und sind beim letzten Eintrag angekommen, keiner stimmt überein also müssen wir einen neuen erzeugen\n         }\n     } else { // hier ist das Datum nicht eingegeben\n     bestbefore = item.attributes[attributanzahl-1].bestBeforeDate \n    if (typeof bestbefore == \"undefined\") { // bestbefore nicht definiert\n        \n            item.attributes[attributanzahl - 1].count = item.attributes[attributanzahl - 1].count + items;  // dann einfach hinzufügen\n    }\n    else{\n        \n            item.attributes.push({\"count\" :  items}); // sonst listenelement hinzu\n       \n    }\n     }\n    msg.payload = item; // Item an Payload dran\n\n    if (group.isingrupe){  //vvhbjhgvghj // haben wir eine Gruppe dann extrarunde\n        msg2.gtin = group.groupgtin\n        return [msg, msg2];  \n    } else {\n     return [msg, null];   // sonst raus an den request\n    }\n\n    \n}\n//Status 2 Ausgabe\n if (status == 2) {\n     if (item.notfound??false ){\n         return null\n     }\n        item.attributes[0].count = item.attributes[0].count - 1;\n    if (item.attributes[0].count<1){\n        if (attributanzahl>1) {\n            item.attributes.shift();\n        } else {\n            item.attributes.shift();\n            item.attributes.push({ \"count\": 0 });\n        }\n        \n         }\n     msg.payload = item;\n     if (group.isingrupe) { //hgghjkjhgv\n        \n         msg2.gtin = group.groupgtin\n         return [msg, msg2];\n     } else {\n         return [msg, null];\n     }        \n} \n//Status 51 52 53 Bestätigung Artikel\nif (status == 51||status==52 || status==53){\n      if ((typeof item.description != \"undefined\")) {\n          item.description = item.description.replace(\"Added by REST API via GTIN \"+ item.gtin,\"leer\")\n      }\n      flow.set(\"FunktionStatus\",status-50); //rücksetzen auf alten Status\n      msg.payload = item;\n    return [msg, null];\n}\n\n//Status 61 63 Erzeuge Set\nif (status == 61 || status == 63) {\n    if (typeof item.description == \"undefined\") {\n        item.description = \"{\\\"text\\\" :  \\\"\\\", \\\"isset\\\": false, \\\"items\\\": 1, \\\"gtin\\\": \\\"<setgtin>\\\" }\"\n    } else if (item.description[0] == \"{\"){\n        description = {}\n        description=JSON.parse(item.description)\n        description.isset=true\n        description.items=\"<itemanzahl>\"\n        description.gtin=\"<setgtin>\"\n        item.description = JSON.stringify(description)\n    } else {\n         item.description = \"{\\\"text\\\" :  \\\"\" + item.description + \"\\\", \\\"isset\\\": true, \\\"items\\\": <itemanzahl>, \\\"gtin\\\": \\\"<setgtin>\\\" }\"\n    }\n\n    flow.set(\"FunktionStatus\", status - 60); //rücksetzen auf alten Status\n    msg.payload = item;\n    return [msg, null];\n}\n\n//Status 71 73 Gruppe festlegen\nif (status == 71 || status == 73) { // nur im Status Eingabe und Info\n    if (typeof item.description == \"undefined\") { // Wenn es keine Beschreibung gibt ist es einfach \n        item.description = \"{\\\"text\\\" :  \\\"\\\", \\\"isingroup\\\": false, \\\"groupgtin\\\": \\\"<setgtin>\\\" }\" // JSON in die Description fertig\n    } else if (item.description[0] == \"{\") { // irgendwas ist in der Description und es beginnt mit { also ein JSON Objekt\n            description = {}\n            description = JSON.parse(item.description)\n            description.isingroup = true\n            description.groupgtin = \"<groupegtin>\"\n            item.description = JSON.stringify(description)\n        } else { // Description ist befüllt aber mit keinem Objekt\n        item.description = \"{\\\"text\\\" :  \\\"\" + item.description + \"\\\", \\\"isingroup\\\": true, \\\"groupgtin\\\": \\\"<setgtin>\\\" }\" // dann los wir machen ein JSOn Objekt draus\n        }\n\n    flow.set(\"FunktionStatus\", status - 70); //rücksetzen auf alten Status\n    msg.payload = item;\n    return [msg, null];\n}\n\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 1180,
        "wires": [
            [
                "455eb0505e96b7ba",
                "0fe2bf904d63cbc5"
            ],
            [
                "05c19903a05675d3"
            ]
        ]
    },
    {
        "id": "abb394b3a396d8ed",
        "type": "debug",
        "z": "df2a5801fca17d05",
        "name": "debug 71",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1160,
        "y": 1140,
        "wires": []
    },
    {
        "id": "0fe2bf904d63cbc5",
        "type": "debug",
        "z": "df2a5801fca17d05",
        "name": "debug 74",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1000,
        "y": 1140,
        "wires": []
    },
    {
        "id": "fa600f9d8a69c97a",
        "type": "link out",
        "z": "df2a5801fca17d05",
        "name": "UpdateList",
        "mode": "link",
        "links": [
            "72c67620ca1b4da0"
        ],
        "x": 1335,
        "y": 1160,
        "wires": []
    },
    {
        "id": "7aaf74ea058037ab",
        "type": "ui_button",
        "z": "df2a5801fca17d05",
        "name": "",
        "group": "b5196438b63bee02",
        "order": 9,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Info",
        "tooltip": "",
        "color": "",
        "bgcolor": "{{msg.bgcolor}}",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 370,
        "y": 2320,
        "wires": [
            [
                "0a44b9f991a6eeee"
            ]
        ]
    },
    {
        "id": "cf8154f797aa603b",
        "type": "link in",
        "z": "df2a5801fca17d05",
        "name": "link in 48",
        "links": [
            "1784357cdf144d36",
            "c05bab02ca2774eb"
        ],
        "x": 145,
        "y": 2320,
        "wires": [
            [
                "ca5de6a795f6ac94"
            ]
        ]
    },
    {
        "id": "0a44b9f991a6eeee",
        "type": "function",
        "z": "df2a5801fca17d05",
        "name": "function 71",
        "func": "msg.payload= \"Info\"\nflow.set(\"FunktionStatus\", 3)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 2320,
        "wires": [
            [
                "caeadd440daf9b59",
                "c05bab02ca2774eb"
            ]
        ]
    },
    {
        "id": "7219c64ce24782a0",
        "type": "function",
        "z": "df2a5801fca17d05",
        "name": "Farbe",
        "func": "var status = flow.get(\"FunktionStatus\")||0;\nvar msg = { payload: msg.payload.length };\nif (status==1){\n   msg.bgcolor = \"lime\" \n} else {\n   msg.bgcolor = \"blub\" \n}\n    \nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 2240,
        "wires": [
            [
                "a570939fa680b3b7"
            ]
        ]
    },
    {
        "id": "5bdbade10ce056c8",
        "type": "function",
        "z": "df2a5801fca17d05",
        "name": "Farbe",
        "func": "var status = flow.get(\"FunktionStatus\")||0;\nvar msg = { payload: msg.payload.length };\nif (status==2){\n   msg.bgcolor = \"red\" \n} else {\n   msg.bgcolor = \"blub\" \n}\n    \nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 2280,
        "wires": [
            [
                "f1d279e67f679107"
            ]
        ]
    },
    {
        "id": "ca5de6a795f6ac94",
        "type": "function",
        "z": "df2a5801fca17d05",
        "name": "Farbe",
        "func": "var status = flow.get(\"FunktionStatus\")||0;\nvar msg = { payload: msg.payload.length };\nif (status==3){\n   msg.bgcolor = \"yellow\" \n} else {\n   msg.bgcolor = \"blub\" \n}\n    \nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 2320,
        "wires": [
            [
                "7aaf74ea058037ab"
            ]
        ]
    },
    {
        "id": "1784357cdf144d36",
        "type": "link out",
        "z": "df2a5801fca17d05",
        "name": "EingabeButton2",
        "mode": "link",
        "links": [
            "fddc574b7f180e59",
            "85287d42b5670ae4",
            "cf8154f797aa603b",
            "add4c0b1fee25743",
            "01f4172636923fda",
            "9f5b10e528bf8f3d",
            "9eddf93a5405bceb",
            "105f2e5dca58032a"
        ],
        "x": 1035,
        "y": 1740,
        "wires": []
    },
    {
        "id": "3b8d0460e2d976a5",
        "type": "link out",
        "z": "df2a5801fca17d05",
        "name": "hole Artikel",
        "mode": "link",
        "links": [
            "2778894f96a9a232"
        ],
        "x": 645,
        "y": 1760,
        "wires": []
    },
    {
        "id": "2778894f96a9a232",
        "type": "link in",
        "z": "df2a5801fca17d05",
        "name": "link in 49",
        "links": [
            "3b8d0460e2d976a5",
            "cea0db56bce7c201",
            "4ce1c341573d9d3d",
            "05c19903a05675d3",
            "95e168c7c06829a3"
        ],
        "x": 235,
        "y": 1060,
        "wires": [
            [
                "1b1a1507328009ee"
            ]
        ]
    },
    {
        "id": "72c67620ca1b4da0",
        "type": "link in",
        "z": "df2a5801fca17d05",
        "name": "",
        "links": [
            "fa600f9d8a69c97a",
            "e292d5660da60ad7"
        ],
        "x": 695,
        "y": 900,
        "wires": [
            [
                "c1aef9fa386582dc"
            ]
        ]
    },
    {
        "id": "ddfd711237f439ab",
        "type": "function",
        "z": "df2a5801fca17d05",
        "name": "function 72",
        "func": "var msg2 = { payload: msg.payload.length };\nvar audio = {}\nvar status =flow.get(\"FunktionStatus\")\nvar unbekannterArtikel = {}\nvar item = msg.payload\n\n//Fehlerfall abfangen\nif (item.name.length<0??false)\n{\n  audio.payload=\"Es konnte keine Veränderung am Artikel durchgeführt werden.\"\n  return [null,audio]\n}\n\n\nif (status==1){\n  audio.payload=msg.payload.name + \" wurde hinzugefügt!\" \n  flow.set(\"SetArtikel\", { \"gtin\": msg.payload.gtin })\n  }\n\n\nif (status == 2) {\n  audio.payload = \"einmal \" + msg.payload.name + \" wurde entfernt!\"\n}\n\nif (typeof msg.payload.description != \"undefined\" && msg.payload.description.includes(\"Added by\")) {  \n  audio.payload = audio.payload + \" Artikel war nicht im Lager und wurde automatisch hinzugefügt, bitte prüfen.\"\n//&& (msg.payload.attributes[0].count == 1) - wenn die Ansage nur beim ersten mal erfolgen soll\n unbekannterArtikel.marked=true;\n unbekannterArtikel.gtin = msg.payload.gtin\n}\nflow.set(\"unbekannterArtikel\",unbekannterArtikel);\nmsg2.payload=item\nreturn [msg2,audio];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1170,
        "y": 1180,
        "wires": [
            [
                "fa600f9d8a69c97a",
                "2d7d67281b687260"
            ],
            [
                "f0ac4cee15e3cf1b"
            ]
        ]
    },
    {
        "id": "2d7d67281b687260",
        "type": "debug",
        "z": "df2a5801fca17d05",
        "name": "debug 75",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1360,
        "y": 1120,
        "wires": []
    },
    {
        "id": "71232890af9ccfe7",
        "type": "http request",
        "z": "df2a5801fca17d05",
        "name": "Delete Stock Item",
        "method": "DELETE",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": true,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 950,
        "y": 1480,
        "wires": [
            [
                "ef3613fdee110033",
                "9645487723c1e434"
            ]
        ]
    },
    {
        "id": "0c8618046e51ce61",
        "type": "function",
        "z": "df2a5801fca17d05",
        "name": "Delete Einzelartikel",
        "func": "var community = flow.get(\"ComID\")\nvar webside = flow.get(\"webside\")\nvar token = flow.get(\"token\")\nvar storage = flow.get(\"StorLocations\")\nif (msg.payload==\"Cancel\"){\n    return null;\n}\nmsg.payload=\"\";\n\nmsg.url = webside + \"/stock/\" + community + \"/\" + storage + \"/\" + msg.gtin;\n//   'https://staging.api.speisekammer.app/stock/VSIa7KKIsJkA65pqMnDE/32cuZkh3DK3C5Nf74CQm/5000112547825'\nmsg.headers = {};\nmsg.headers['Authorization'] = 'Bearer ' + token;\n//flow.set(\"gtintemp\",msg.gtin);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 1480,
        "wires": [
            [
                "d58aeb16a232660c",
                "71232890af9ccfe7"
            ]
        ]
    },
    {
        "id": "02689c0e99dd897b",
        "type": "debug",
        "z": "df2a5801fca17d05",
        "name": "debug 76",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1360,
        "y": 1460,
        "wires": []
    },
    {
        "id": "d58aeb16a232660c",
        "type": "debug",
        "z": "df2a5801fca17d05",
        "name": "debug 77",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 940,
        "y": 1440,
        "wires": []
    },
    {
        "id": "2df04e7d1d981289",
        "type": "ui_toast",
        "z": "df2a5801fca17d05",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "Cancel",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 710,
        "y": 1360,
        "wires": [
            [
                "0c8618046e51ce61",
                "365dac78b8890dcd"
            ]
        ]
    },
    {
        "id": "365dac78b8890dcd",
        "type": "debug",
        "z": "df2a5801fca17d05",
        "name": "debug 79",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 960,
        "y": 1360,
        "wires": []
    },
    {
        "id": "eccc904243d12c40",
        "type": "ui_toast",
        "z": "df2a5801fca17d05",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1030,
        "y": 520,
        "wires": []
    },
    {
        "id": "ef3613fdee110033",
        "type": "function",
        "z": "df2a5801fca17d05",
        "name": "function 73",
        "func": "if (msg.payload==\"\"){\nmsg.payload = \"Artikel erfolgreich gelöscht!\"\n} else {\n    msg.payload=\"Oh nein, da ist etwas schief gelaufen. Status: \" + msg.title +\" \"+msg.status\n} \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1170,
        "y": 1480,
        "wires": [
            [
                "02689c0e99dd897b",
                "6a44afbbb47941fd",
                "9468bbe3f3ddd5df",
                "539c949eae500ef8"
            ]
        ]
    },
    {
        "id": "6a44afbbb47941fd",
        "type": "ui_toast",
        "z": "df2a5801fca17d05",
        "position": "bottom right",
        "displayTime": "5",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1370,
        "y": 1420,
        "wires": []
    },
    {
        "id": "9468bbe3f3ddd5df",
        "type": "ui_audio",
        "z": "df2a5801fca17d05",
        "name": "",
        "group": "b5196438b63bee02",
        "voice": "Microsoft Katja - German (Germany)",
        "always": true,
        "x": 1340,
        "y": 1380,
        "wires": []
    },
    {
        "id": "c8b6a6e18cf4fdf1",
        "type": "ui_button",
        "z": "df2a5801fca17d05",
        "name": "",
        "group": "1ef0514ec8cc871c",
        "order": 9,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Artikel Löschen",
        "tooltip": "",
        "color": "",
        "bgcolor": "{{msg.bgcolor}}",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 400,
        "y": 2360,
        "wires": [
            [
                "7d156c4c271ec7a5"
            ]
        ]
    },
    {
        "id": "add4c0b1fee25743",
        "type": "link in",
        "z": "df2a5801fca17d05",
        "name": "link in 50",
        "links": [
            "1784357cdf144d36",
            "c05bab02ca2774eb"
        ],
        "x": 145,
        "y": 2360,
        "wires": [
            [
                "1f889b1f74b0eb7f"
            ]
        ]
    },
    {
        "id": "7d156c4c271ec7a5",
        "type": "function",
        "z": "df2a5801fca17d05",
        "name": "function 74",
        "func": "msg.payload= \"Artikel Löschen\"\nflow.set(\"FunktionStatus\", 4)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 2360,
        "wires": [
            [
                "c05bab02ca2774eb",
                "caeadd440daf9b59"
            ]
        ]
    },
    {
        "id": "1f889b1f74b0eb7f",
        "type": "function",
        "z": "df2a5801fca17d05",
        "name": "Farbe",
        "func": "var status = flow.get(\"FunktionStatus\")||0;\nvar msg = { payload: msg.payload.length };\nif (status==4){\n   msg.bgcolor = \"red\" \n} else {\n   msg.bgcolor = \"blub\" \n}\n    \nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 2360,
        "wires": [
            [
                "c8b6a6e18cf4fdf1"
            ]
        ]
    },
    {
        "id": "3645cb10c72137da",
        "type": "function",
        "z": "df2a5801fca17d05",
        "name": "function 75",
        "func": "var item = msg.payload\nvar msg = { };\n\nvar msg2 = {  };\n\nvar status = flow.get(\"FunktionStatus\");\n\nif (typeof item.status != \"undefined\" && status==3) {\n    msg.payload=\"Der Artikel wurde in diesem Lager leider nicht gefunden!\"\n    flow.set(\"SetArtikel\", { \"gtin\": 0})\n    return [msg, null];\n}\n\nif (typeof item.status != \"undefined\" && status == 2) {\n    msg.payload = \"Der Artikel wurde in diesem Lager leider nicht gefunden und daher nicht gelöscht werden!\"\n    flow.set(\"SetArtikel\", { \"gtin\": 0 })\n    return [msg, null];\n}\n\nif (status == 3) {\n    var anzahl=0;\n    for (let y = 0; y < item.attributes.length; y++){\n        anzahl = anzahl + item.attributes[y].count\n    }\n\n    msg.payload = item.name + \" ist aktuell \" + anzahl + \" mal in diesem Lager vorhanden!\"\n    var unbekannterArtikel ={}\n    if (typeof item.description != \"undefined\" && item.description.includes(\"Added by\")) {\n        unbekannterArtikel.marked = true;\n        unbekannterArtikel.gtin = item.gtin\n    }\n    flow.set(\"SetArtikel\",{\"gtin\":item.gtin})\n    flow.set(\"unbekannterArtikel\", unbekannterArtikel);\n    return [msg, null];    \n}\n\nif (status==4){\n    msg.payload = \"Bitte bestätigen Sie auf dem Display das Sie den Artikel \" + item.name + \" wirklich löschen wollen!\"\n    msg2.gtin = item.gtin;\n    msg2.payload = \"Wollen Sie \" + item.name + \" - \" + item.gtin + \" wirklich löschen?\"\n    return [msg, msg2];\n}\n\n\n\n\n\n\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 1340,
        "wires": [
            [
                "5bfd9cba429c033c",
                "0fec57fa49413087"
            ],
            [
                "2df04e7d1d981289"
            ]
        ]
    },
    {
        "id": "5bfd9cba429c033c",
        "type": "ui_audio",
        "z": "df2a5801fca17d05",
        "name": "",
        "group": "b5196438b63bee02",
        "voice": "Microsoft Katja - German (Germany)",
        "always": true,
        "x": 720,
        "y": 1320,
        "wires": []
    },
    {
        "id": "26f769c86153a6c3",
        "type": "link out",
        "z": "df2a5801fca17d05",
        "name": "Tabellefuellen",
        "mode": "link",
        "links": [
            "1bd9ff15d61b2b85"
        ],
        "x": 1295,
        "y": 720,
        "wires": []
    },
    {
        "id": "1bd9ff15d61b2b85",
        "type": "link in",
        "z": "df2a5801fca17d05",
        "name": "link in 51",
        "links": [
            "26f769c86153a6c3",
            "539c949eae500ef8"
        ],
        "x": 305,
        "y": 880,
        "wires": [
            [
                "dc0e732f8685201c"
            ]
        ]
    },
    {
        "id": "e2cbd07a40e1b984",
        "type": "debug",
        "z": "df2a5801fca17d05",
        "name": "debug 80",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 800,
        "y": 640,
        "wires": []
    },
    {
        "id": "ba54cef204545264",
        "type": "ui_audio",
        "z": "df2a5801fca17d05",
        "name": "",
        "group": "b5196438b63bee02",
        "voice": "Microsoft Katja - German (Germany)",
        "always": true,
        "x": 1200,
        "y": 1820,
        "wires": []
    },
    {
        "id": "e66f4dea5563f673",
        "type": "function",
        "z": "df2a5801fca17d05",
        "name": "Manage MHD",
        "func": "var befehl = msg.payload.split(\":\")\nvar anzeige = {  };\nvar audio = {  };\nvar datum = {}\ndatum = flow.get(\"MHDDatum\")??{\"tag\":\"00\", \"tagfertig\":false, \"monat\":\"00\", \"monatfertig\":false, \"jahr\":\"00\", \"jahrfertig\":false, \"monatlang\":\"\"};\n\nif (datum.used??true){\n    datum.tag = \"\";\n    datum.monat=\"\";\n    datum.jahr=\"\";\n}\n\nswitch (befehl[0]) {\n    case \"#Tag\":\n        datum.tag = befehl[1]\n        datum.tagfertig = true;\n        anzeige.payload = datum.tag + \".\"+datum.monat +\".\" +datum.jahr\n        audio.payload = datum.tag + \".\" + datum.monatlang + \".\" + datum.jahr\n        \n        break;\n    case \"#Monat\":\n        datum.monat = befehl[1]\n        datum.monatfertig = true;\n        switch(datum.monat){\n            case \"01\":\n                datum.monatlang=\"Januar\"\n                break;\n            case \"02\":\n                datum.monatlang = \"Februar\"\n                break;\n            case \"03\":\n                datum.monatlang = \"März\"\n                break;\n            case \"04\":\n                datum.monatlang = \"April\"\n                break;\n            case \"05\":\n                datum.monatlang = \"Mai\"\n                break;\n            case \"06\":\n                datum.monatlang = \"Juni\"\n                break;\n            case \"07\":\n                datum.monatlang = \"Juli\"\n                break;\n            case \"08\":\n                datum.monatlang = \"August\"\n                break;\n            case \"09\":\n                datum.monatlang = \"September\"\n                break;\n            case \"10\":\n                datum.monatlang = \"Oktober\"\n                break;\n            case \"11\":\n                datum.monatlang = \"November\"\n                break;\n            case \"12\":\n                datum.monatlang = \"Dezember\"\n                break;\n            default:\n                datum.monatlang = \"kein korrekter Monat angegeben\"\n                datum.monatfertig = false;\n\n        }\n        anzeige.payload = datum.tag + \".\" + datum.monat + \".\" + datum.jahr\n        audio.payload = datum.tag + \".\" + datum.monatlang + \".\" + datum.jahr\n       \n        break;\n    case \"#Jahr\":\n        datum.jahr = befehl[1]\n        datum.jahrfertig = true;\n        anzeige.payload = datum.tag + \".\" + datum.monat + \".\" + datum.jahr\n        audio.payload = datum.tag + \".\" + datum.monatlang + \".\" + datum.jahr\n        \n        break;\n\n    default:\n        anzeige.payload = \"Datum wurde nicht erkannt\"\n        audio.payload = \"Datum wurde nicht erkannt\"\n        \n        \n}\n\nif (datum.tagfertig&&datum.monatfertig&&datum.jahrfertig){\n    datum.fertig=true;\n    datum.used=false;\n    datum.mhd=datum.jahr+\"-\"+datum.monat+\"-\"+datum.tag\n    anzeige.payload = anzeige.payload + \" Datum vollständig erfasst\"\n}\nflow.set(\"MHDDatum\", datum)\n\nreturn [anzeige, audio]\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 2000,
        "wires": [
            [
                "6487fe6075005abd"
            ],
            [
                "2bcec771996f84b0"
            ]
        ]
    },
    {
        "id": "2bcec771996f84b0",
        "type": "ui_audio",
        "z": "df2a5801fca17d05",
        "name": "",
        "group": "b5196438b63bee02",
        "voice": "Microsoft Katja - German (Germany)",
        "always": true,
        "x": 1100,
        "y": 2000,
        "wires": []
    },
    {
        "id": "6487fe6075005abd",
        "type": "ui_toast",
        "z": "df2a5801fca17d05",
        "position": "bottom right",
        "displayTime": "5",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1130,
        "y": 1960,
        "wires": []
    },
    {
        "id": "f0ac4cee15e3cf1b",
        "type": "ui_audio",
        "z": "df2a5801fca17d05",
        "name": "",
        "group": "b5196438b63bee02",
        "voice": "Microsoft Katja - German (Germany)",
        "always": true,
        "x": 1360,
        "y": 1200,
        "wires": []
    },
    {
        "id": "8aa13595dc2ee0a9",
        "type": "file",
        "z": "df2a5801fca17d05",
        "name": "",
        "filename": "filename",
        "filenameType": "msg",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "utf8",
        "x": 800,
        "y": 280,
        "wires": [
            [
                "caaf131191753752"
            ]
        ]
    },
    {
        "id": "47a92d1f46f739f0",
        "type": "file in",
        "z": "df2a5801fca17d05",
        "name": "",
        "filename": "filename",
        "filenameType": "msg",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 440,
        "y": 460,
        "wires": [
            [
                "98dd161356aa3ef6"
            ]
        ]
    },
    {
        "id": "b9bb4e8c36940aa7",
        "type": "function",
        "z": "df2a5801fca17d05",
        "name": "function 76",
        "func": "var setupnr= flow.get(\"setupnr\")??0\nmsg.filename =\"/home/pi/setupspeisekammer/Setup\"+setupnr+\".json\"\nmsg.payload = ({\"url\":msg.url,\"token\":msg.payload});\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 280,
        "wires": [
            [
                "8aa13595dc2ee0a9"
            ]
        ]
    },
    {
        "id": "caaf131191753752",
        "type": "debug",
        "z": "df2a5801fca17d05",
        "name": "debug 82",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1000,
        "y": 280,
        "wires": []
    },
    {
        "id": "b5beb21ffe40bcdc",
        "type": "debug",
        "z": "df2a5801fca17d05",
        "name": "debug 83",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 760,
        "y": 420,
        "wires": []
    },
    {
        "id": "98dd161356aa3ef6",
        "type": "json",
        "z": "df2a5801fca17d05",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 590,
        "y": 460,
        "wires": [
            [
                "b5beb21ffe40bcdc",
                "a540911a66fe9125"
            ]
        ]
    },
    {
        "id": "5ac1c62c5220eae4",
        "type": "ui_button",
        "z": "df2a5801fca17d05",
        "name": "",
        "group": "1ef0514ec8cc871c",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Setup eingeben",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "Bitte URL angeben:",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 180,
        "y": 260,
        "wires": [
            [
                "2db00ac1eca1fc5b"
            ]
        ]
    },
    {
        "id": "5ce570e5935bee8d",
        "type": "ui_dropdown",
        "z": "df2a5801fca17d05",
        "name": "",
        "label": "Setupauswahl",
        "tooltip": "",
        "place": "Select option",
        "group": "1ef0514ec8cc871c",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Setup 1 - Standard",
                "value": 0,
                "type": "num"
            },
            {
                "label": "Setup 2",
                "value": 1,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 180,
        "y": 400,
        "wires": [
            [
                "ce8dba23b2ebb5fa"
            ]
        ]
    },
    {
        "id": "ce8dba23b2ebb5fa",
        "type": "function",
        "z": "df2a5801fca17d05",
        "name": "Load Setup",
        "func": "flow.set(\"setupnr\", msg.payload)\nmsg.filename = \"/home/pi/setupspeisekammer/Setup\" + msg.payload + \".json\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 400,
        "wires": [
            [
                "47a92d1f46f739f0"
            ]
        ]
    },
    {
        "id": "2db00ac1eca1fc5b",
        "type": "ui_toast",
        "z": "df2a5801fca17d05",
        "position": "prompt",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "Cancel",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 370,
        "y": 260,
        "wires": [
            [
                "a61afc583e8ddf89"
            ]
        ]
    },
    {
        "id": "9af63971f93c7d79",
        "type": "ui_toast",
        "z": "df2a5801fca17d05",
        "position": "prompt",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "Cancel",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 370,
        "y": 300,
        "wires": [
            [
                "b9bb4e8c36940aa7"
            ]
        ]
    },
    {
        "id": "a61afc583e8ddf89",
        "type": "function",
        "z": "df2a5801fca17d05",
        "name": "function 77",
        "func": "msg.url=msg.payload\nmsg.payload=\"Bitte den Token eingeben:\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 300,
        "wires": [
            [
                "9af63971f93c7d79"
            ]
        ]
    },
    {
        "id": "9645487723c1e434",
        "type": "debug",
        "z": "df2a5801fca17d05",
        "name": "debug 84",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1160,
        "y": 1440,
        "wires": []
    },
    {
        "id": "84064c67e828f0fc",
        "type": "debug",
        "z": "df2a5801fca17d05",
        "name": "debug 85",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 760,
        "y": 1880,
        "wires": []
    },
    {
        "id": "837252d960e299c8",
        "type": "debug",
        "z": "df2a5801fca17d05",
        "name": "debug 86",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 780,
        "y": 1740,
        "wires": []
    },
    {
        "id": "460263f611350c42",
        "type": "comment",
        "z": "df2a5801fca17d05",
        "name": "Barcodeliste",
        "info": "[https://barcode.tec-it.com/de/]()\n\n$Erfassung\n$Ausgabe\n$Info\n$Loeschen\n$Lagerort:1\n$Lagerort:2\n$Lagerort:3\n$Lagerort:4\n$Lagerort:5\n$Lagerort:6\n\n$Lagerort:7\n$Lagerort:8\n$Lagerort:9\n$Lagerort:10\n#Tag:01\n#Tag:02\n#Tag:03\n#Tag:04\n#Tag:05\n#Tag:06\n\n#Tag:07\n#Tag:08\n#Tag:09\n#Tag:10\n#Tag:11\n#Tag:12\n#Tag:13\n#Tag:14\n#Tag:15\n#Tag:16\n\n#Tag:17\n#Tag:18\n#Tag:19\n#Tag:20\n#Tag:21\n#Tag:22\n#Tag:23\n#Tag:24\n#Tag:25\n#Tag:26\n\n#Tag:27\n#Tag:28\n#Tag:29\n#Tag:30\n#Tag:31\n#Monat:01\n#Monat:02\n#Monat:03\n#Monat:04\n#Monat:05\n\n#Monat:06\n#Monat:07\n#Monat:08\n#Monat:09\n#Monat:10\n#Monat:11\n#Monat:12\n#Jahr:2024\n#Jahr:2025\n#Jahr:2026\n\n#Jahr:2027\n#Jahr:2028\n#Jahr:2029\n#Jahr:2030\n$ArtikelOk\n$SetAnlegen",
        "x": 230,
        "y": 1980,
        "wires": []
    },
    {
        "id": "539c949eae500ef8",
        "type": "link out",
        "z": "df2a5801fca17d05",
        "name": "Tabellefuellen",
        "mode": "link",
        "links": [
            "1bd9ff15d61b2b85"
        ],
        "x": 1315,
        "y": 1520,
        "wires": []
    },
    {
        "id": "e292d5660da60ad7",
        "type": "link out",
        "z": "df2a5801fca17d05",
        "name": "Linkout GetStock Item",
        "mode": "link",
        "links": [
            "72c67620ca1b4da0",
            "ac2f7e0c75ed11da",
            "6f286af48641b8ed"
        ],
        "x": 765,
        "y": 1060,
        "wires": []
    },
    {
        "id": "ac2f7e0c75ed11da",
        "type": "link in",
        "z": "df2a5801fca17d05",
        "name": "Linkin Put",
        "links": [
            "e292d5660da60ad7"
        ],
        "x": 465,
        "y": 1180,
        "wires": [
            [
                "10cdef9b7ab8e6da"
            ]
        ]
    },
    {
        "id": "6f286af48641b8ed",
        "type": "link in",
        "z": "df2a5801fca17d05",
        "name": "Linkin Delete und Sound Out",
        "links": [
            "e292d5660da60ad7"
        ],
        "x": 355,
        "y": 1340,
        "wires": [
            [
                "3645cb10c72137da"
            ]
        ]
    },
    {
        "id": "d868ae22b40b5658",
        "type": "ui_button",
        "z": "df2a5801fca17d05",
        "name": "",
        "group": "1ef0514ec8cc871c",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": true,
        "label": "Artikel korrekt bestätigen",
        "tooltip": "",
        "color": "",
        "bgcolor": "{{msg.bgcolor}}",
        "className": "",
        "icon": "",
        "payload": "ArtikelOk",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 230,
        "y": 2180,
        "wires": [
            [
                "0b129c9208120773"
            ]
        ]
    },
    {
        "id": "cea0db56bce7c201",
        "type": "link out",
        "z": "df2a5801fca17d05",
        "name": "hole Artikel",
        "mode": "link",
        "links": [
            "2778894f96a9a232"
        ],
        "x": 685,
        "y": 2180,
        "wires": []
    },
    {
        "id": "0b129c9208120773",
        "type": "function",
        "z": "df2a5801fca17d05",
        "name": "Artikel bestätigen",
        "func": "if (msg.payload != \"ArtikelOk\") {\n    return [null, null]\n}\n\nvar unbekannterArtikel = flow.get(\"unbekannterArtikel\")\nvar audio ={}\nif (unbekannterArtikel.marked??false){\n    msg.gtin=unbekannterArtikel.gtin\n}else\n{\n    audio.payload=\"Der Artikel wurde nicht als unbekannt markiert und kann daher nicht bestätigt werden\"\nreturn [null, audio]\n}\nvar status = flow.get(\"FunktionStatus\");\n\n    switch (status) {\n        case 1:\n            flow.set(\"FunktionStatus\",51)\n            audio.payload = \"Artikel wird bestätigt\";\n            break;\n        case 2:\n            flow.set(\"FunktionStatus\", 52)\n            audio.payload = \"Artikel wird bestätigt\";\n            break;\n        case 3:\n            flow.set(\"FunktionStatus\", 53)\n            audio.payload = \"Artikel wird bestätigt\";\n            break;\n        case 4:\n            flow.set(\"FunktionStatus\", 3)\n            audio.payload = \"Im Status Löschen kann ein Artikel nicht bestätigt werden\";\n            break;\n        default:\n            audio.payload = \"Es wurde kein Status erkannt \" + status;\n    }\n\nreturn [msg, audio];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 2180,
        "wires": [
            [
                "cea0db56bce7c201"
            ],
            [
                "caeadd440daf9b59"
            ]
        ]
    },
    {
        "id": "fe70629b9c2ff576",
        "type": "ui_button",
        "z": "df2a5801fca17d05",
        "name": "",
        "group": "1ef0514ec8cc871c",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Als Set deklarieren",
        "tooltip": "",
        "color": "",
        "bgcolor": "{{msg.bgcolor}}",
        "className": "",
        "icon": "",
        "payload": "Set",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 210,
        "y": 2140,
        "wires": [
            [
                "f7e72db3f50cb356"
            ]
        ]
    },
    {
        "id": "4ce1c341573d9d3d",
        "type": "link out",
        "z": "df2a5801fca17d05",
        "name": "hole Artikel",
        "mode": "link",
        "links": [
            "2778894f96a9a232"
        ],
        "x": 685,
        "y": 2140,
        "wires": []
    },
    {
        "id": "f7e72db3f50cb356",
        "type": "function",
        "z": "df2a5801fca17d05",
        "name": "Artikel Set",
        "func": "if (msg.payload != \"Set\") {\n    return [null, null]\n}\n\nvar setArtikel = flow.get(\"SetArtikel\")\nvar audio = {}\nif (setArtikel.gtin!=0??false){\n    msg.gtin=setArtikel.gtin\n}else\n{\n    audio.payload=\"Der letzte Artikel wurde nicht richtig erkannt bitte erneut scannen\"\n    flow.set(\"FunktionStatus\", 3)\nreturn [null, audio]\n}\nvar status = flow.get(\"FunktionStatus\");\n\n    switch (status) {\n        case 1:\n            flow.set(\"FunktionStatus\",61)\n            audio.payload=\"Set wird angelegt muss angepasst werden\";\n            break;\n        case 2:\n            flow.set(\"FunktionStatus\", 3)\n            audio.payload = \"Im Status Ausgabe können keine Sets erfasst werden, wechsel auf Info\";\n            break;\n        case 3:\n            flow.set(\"FunktionStatus\", 63)\n            audio.payload = \"Set wird angelegt muss angepasst werden\";\n            break;\n        case 4:\n            flow.set(\"FunktionStatus\", 3)\n            audio.payload = \"Im Status Löschen können keine Sets erfasst werden, wechsel auf Info\";\n            break;\n        default:\n            audio.payload = \"Es wurde kein Status erkannt\";\n            return[null, audio];\n    }\n\nreturn [msg, audio];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 2140,
        "wires": [
            [
                "4ce1c341573d9d3d"
            ],
            [
                "caeadd440daf9b59"
            ]
        ]
    },
    {
        "id": "0fec57fa49413087",
        "type": "debug",
        "z": "df2a5801fca17d05",
        "name": "debug 92",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 700,
        "y": 1260,
        "wires": []
    },
    {
        "id": "10cdef9b7ab8e6da",
        "type": "delay",
        "z": "df2a5801fca17d05",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 620,
        "y": 1180,
        "wires": [
            [
                "9fddcfa3464f6f98"
            ]
        ]
    },
    {
        "id": "05c19903a05675d3",
        "type": "link out",
        "z": "df2a5801fca17d05",
        "name": "hole Artikel",
        "mode": "link",
        "links": [
            "2778894f96a9a232"
        ],
        "x": 945,
        "y": 1240,
        "wires": []
    },
    {
        "id": "4183275872690bf2",
        "type": "ui_button",
        "z": "df2a5801fca17d05",
        "name": "",
        "group": "1ef0514ec8cc871c",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Gruppenzuordnung vorbereiten",
        "tooltip": "",
        "color": "",
        "bgcolor": "{{msg.bgcolor}}",
        "className": "",
        "icon": "",
        "payload": "Gruppe",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 250,
        "y": 2100,
        "wires": [
            [
                "2bf03c1f464a6bbf"
            ]
        ]
    },
    {
        "id": "95e168c7c06829a3",
        "type": "link out",
        "z": "df2a5801fca17d05",
        "name": "hole Artikel",
        "mode": "link",
        "links": [
            "2778894f96a9a232"
        ],
        "x": 685,
        "y": 2100,
        "wires": []
    },
    {
        "id": "2bf03c1f464a6bbf",
        "type": "function",
        "z": "df2a5801fca17d05",
        "name": "Artikel Set",
        "func": "if (msg.payload!=\"Gruppe\"){\n    return [null, null]\n}\n\nvar setArtikel = flow.get(\"SetArtikel\")\nvar audio = {}\nif (setArtikel.gtin != 0 ?? false) {\n    msg.gtin = setArtikel.gtin\n} else {\n    audio.payload = \"Der letzte Artikel wurde nicht richtig erkannt bitte erneut scannen\"\n    flow.set(\"FunktionStatus\", 3)\n    return [null, audio]\n}\n\nvar status = flow.get(\"FunktionStatus\");\n\n    switch (status) {\n        case 1:\n            flow.set(\"FunktionStatus\",71)\n            audio.payload=\"Gruppenzuordnung wird vorbereiet, muss angepasst werden\";\n            break;\n        case 2:\n            flow.set(\"FunktionStatus\", 3)\n            audio.payload = \"Im Status Ausgabe kann keine Gruppenvorbereitung durchgeführt werden, wechsel auf Info\";\n            break;\n        case 3:\n            flow.set(\"FunktionStatus\", 73)\n            audio.payload = \"Gruppenzuordnung wird vorbereiet, muss angepasst werden\";\n            break;\n        case 4:\n            flow.set(\"FunktionStatus\", 3)\n            audio.payload = \"Im Status Löschen kann keine Gruppenvorbereitung durchgeführt werden, wechsel auf Info\";\n            break;\n        default:\n            audio.payload = \"Es wurde kein Status erkannt\";\n            return[null, audio];\n    }\n\nreturn [msg, audio];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 2100,
        "wires": [
            [
                "95e168c7c06829a3"
            ],
            [
                "caeadd440daf9b59"
            ]
        ]
    },
    {
        "id": "105f2e5dca58032a",
        "type": "link in",
        "z": "df2a5801fca17d05",
        "name": "link in 54",
        "links": [
            "1784357cdf144d36"
        ],
        "x": 385,
        "y": 2060,
        "wires": [
            [
                "2bf03c1f464a6bbf",
                "f7e72db3f50cb356",
                "0b129c9208120773"
            ]
        ]
    },
    {
        "id": "0899676bcb20faff",
        "type": "ui_toast",
        "z": "df2a5801fca17d05",
        "position": "bottom right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1210,
        "y": 1780,
        "wires": []
    },
    {
        "id": "b5196438b63bee02",
        "type": "ui_group",
        "name": "Standard",
        "tab": "6b1243d835d9c436",
        "order": 1,
        "disp": true,
        "width": "19",
        "collapse": true,
        "className": ""
    },
    {
        "id": "1ef0514ec8cc871c",
        "type": "ui_group",
        "name": "Setup",
        "tab": "6b1243d835d9c436",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "6b1243d835d9c436",
        "type": "ui_tab",
        "name": "Speisekammer",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    }
]