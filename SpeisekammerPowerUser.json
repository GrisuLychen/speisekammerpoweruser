[
    {
        "id": "1ffe3e95ef0562db",
        "type": "tab",
        "label": "Speisekammer2",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "c8046a5eb55aa438",
        "type": "http request",
        "z": "1ffe3e95ef0562db",
        "name": "Get Community",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 560,
        "y": 560,
        "wires": [
            [
                "2a6760aa560b3f11",
                "5eda33bd8828e258"
            ]
        ]
    },
    {
        "id": "7fd9fc3cabe77bef",
        "type": "function",
        "z": "1ffe3e95ef0562db",
        "name": "function 52",
        "func": "flow.set(\"ComID\",msg.payload[0].id)\nvar setupnummer = flow.get(\"setupnr\") + 1 ?? 0\nmsg.payload = \"Setup \" + setupnummer + \" geladen, \"+\"Community gefunden: \" + msg.payload[0].name\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1630,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "bc71ee73af8e9b77",
        "type": "http request",
        "z": "1ffe3e95ef0562db",
        "name": "Get Storage Locations",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 600,
        "y": 680,
        "wires": [
            [
                "6dc9544f0f0bb125",
                "197404187a8ccf14"
            ]
        ]
    },
    {
        "id": "85fb32b16e780244",
        "type": "debug",
        "z": "1ffe3e95ef0562db",
        "name": "debug 62",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1000,
        "y": 640,
        "wires": []
    },
    {
        "id": "6dc9544f0f0bb125",
        "type": "function",
        "z": "1ffe3e95ef0562db",
        "name": "function 54",
        "func": "flow.set(\"StorLocations\", msg.payload[0].id)\nvar lagerorte = msg.payload\nflow.set(\"Lagerorte\",lagerorte);\nvar options = [];\n\nlet count = msg.payload.length\nvar name \nvar id\n\nfor (let x = 0; x < count; x++) {\n    name = msg.payload[x].name;\n    id = msg.payload[x].id;\n    options.push({ [name]: id }); \n    if (name==\"Gruppen\"){\n        flow.set(\"Gruppenlager\",id)\n    }   \n}\nmsg = { payload: msg.payload.length };\nmsg.payload = lagerorte[0].id;\n//msg.store = lagerorte[0].id;\nmsg.options=options;\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 680,
        "wires": [
            [
                "59fa3a5acf296427",
                "85fb32b16e780244"
            ]
        ]
    },
    {
        "id": "62f98ffd3619a83d",
        "type": "function",
        "z": "1ffe3e95ef0562db",
        "name": "function 55",
        "func": "var community = flow.get(\"ComID\")\nvar webside = flow.get(\"webside\")\nvar token = flow.get(\"token\")\nmsg={};\nmsg.url = webside + \"/communities/\" + community +\"/storage-locations\"\nmsg.headers = {};\nmsg.headers['Authorization'] = 'Bearer '+token;\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 680,
        "wires": [
            [
                "bc71ee73af8e9b77",
                "41e4f3ea4627ae89"
            ]
        ]
    },
    {
        "id": "7f11afc134f3af7a",
        "type": "http request",
        "z": "1ffe3e95ef0562db",
        "name": "Get Stock",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 620,
        "y": 840,
        "wires": [
            [
                "e8e2f337555833d6",
                "ee3cc0674058c093"
            ]
        ]
    },
    {
        "id": "dc5e8babf7e948bd",
        "type": "inject",
        "z": "1ffe3e95ef0562db",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 240,
        "y": 780,
        "wires": [
            [
                "4ae123387b9c391f"
            ]
        ]
    },
    {
        "id": "e8e2f337555833d6",
        "type": "debug",
        "z": "1ffe3e95ef0562db",
        "name": "debug 63",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 780,
        "y": 820,
        "wires": []
    },
    {
        "id": "4ae123387b9c391f",
        "type": "function",
        "z": "1ffe3e95ef0562db",
        "name": "function 57",
        "func": "var community = flow.get(\"ComID\")\nvar webside = flow.get(\"webside\")\nvar token = flow.get(\"token\")\nvar storage = flow.get(\"StorLocations\")\n\nmsg.url = webside + \"/stock/\" + community + \"/\" + storage;\nmsg.headers = {};\nmsg.headers['Authorization'] = 'Bearer ' + token;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 840,
        "wires": [
            [
                "7f11afc134f3af7a"
            ]
        ]
    },
    {
        "id": "7f284e22ab75985e",
        "type": "function",
        "z": "1ffe3e95ef0562db",
        "name": "function 58",
        "func": "//var webside = \"https://staging.api.speisekammer.app\"\n\n\nvar webside = msg.payload.url\nvar token = msg.payload.token\n\nflow.set(\"webside\",webside)\nflow.set(\"token\",token)\n\nmsg.url = webside+\"/communities\"\nmsg.headers = {};\nmsg.headers['Authorization'] = 'Bearer '+token;\n\nreturn msg;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 560,
        "wires": [
            [
                "c8046a5eb55aa438"
            ]
        ]
    },
    {
        "id": "fba263e3549f0dcc",
        "type": "ui_text_input",
        "z": "1ffe3e95ef0562db",
        "name": "",
        "label": "Barcode",
        "tooltip": "",
        "group": "b5196438b63bee02",
        "order": 2,
        "width": 8,
        "height": 1,
        "passthru": false,
        "mode": "text",
        "delay": "0",
        "topic": "topic",
        "sendOnBlur": false,
        "className": "",
        "topicType": "msg",
        "x": 220,
        "y": 1760,
        "wires": [
            [
                "5920968320a629ce",
                "4e03f0aaa8e639eb"
            ]
        ]
    },
    {
        "id": "5920968320a629ce",
        "type": "delay",
        "z": "1ffe3e95ef0562db",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 220,
        "y": 1820,
        "wires": [
            [
                "eef42dae24be7bb1"
            ]
        ]
    },
    {
        "id": "eef42dae24be7bb1",
        "type": "function",
        "z": "1ffe3e95ef0562db",
        "name": "clear",
        "func": "msg.payload=\"\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 1860,
        "wires": [
            [
                "fba263e3549f0dcc"
            ]
        ]
    },
    {
        "id": "5fc3610cd5e8e2e0",
        "type": "ui_audio",
        "z": "1ffe3e95ef0562db",
        "name": "",
        "group": "b5196438b63bee02",
        "voice": "Microsoft Katja - German (Germany)",
        "always": true,
        "x": 860,
        "y": 2660,
        "wires": []
    },
    {
        "id": "4e03f0aaa8e639eb",
        "type": "function",
        "z": "1ffe3e95ef0562db",
        "name": "Check Barcode",
        "func": "\n\n\nmsg.gtin=msg.payload\n\n\nswitch (msg.payload[0]) {\n    case \"$\":\n\n        return [null, msg, null]\n   \n    case \"#\":\n        return [null, null, msg]\n    \n    case \"-\":\n        if (msg.payload.length != 8 ) {\n            return [msg, null, null]\n        }\n      break\n\n    default:\n        if (msg.payload.length > 8 && msg.payload.length < 14) {\n            return [msg, null, null]\n        }\n        break\n        \n\n}\n\n",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 1820,
        "wires": [
            [
                "53b7d26813826bbb",
                "583ae711b59d3c03"
            ],
            [
                "9a95362dc3166a9f",
                "8f22ab67c7b2a55b"
            ],
            [
                "60cf09b6558a4b42",
                "1606f4a4a55142b4"
            ]
        ]
    },
    {
        "id": "114f18cf7b6ed0e8",
        "type": "ui_template",
        "z": "1ffe3e95ef0562db",
        "group": "b5196438b63bee02",
        "name": "",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<script>\n    var el = document.querySelectorAll(\"input[type=\\\"text\\\"\")[0],\n    \n        setFocus = function() {\n            if (el) {\n                el.focus();\n            }\n            \n            setTimeout(setFocus, 100);\n        };\n    \n    setFocus();\n    \n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 800,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "f7c747c519957b36",
        "type": "ui_button",
        "z": "1ffe3e95ef0562db",
        "name": "",
        "group": "b5196438b63bee02",
        "order": 10,
        "width": 5,
        "height": 1,
        "passthru": false,
        "label": "Erfassung",
        "tooltip": "",
        "color": "",
        "bgcolor": "{{msg.bgcolor}}",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 380,
        "y": 2500,
        "wires": [
            [
                "b68cc838ce316828"
            ]
        ]
    },
    {
        "id": "3fb4b9804586a482",
        "type": "ui_button",
        "z": "1ffe3e95ef0562db",
        "name": "",
        "group": "b5196438b63bee02",
        "order": 6,
        "width": 5,
        "height": 1,
        "passthru": false,
        "label": "Ausgabe",
        "tooltip": "",
        "color": "",
        "bgcolor": "{{msg.bgcolor}}",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 380,
        "y": 2540,
        "wires": [
            [
                "d999d788330db44c"
            ]
        ]
    },
    {
        "id": "b68cc838ce316828",
        "type": "function",
        "z": "1ffe3e95ef0562db",
        "name": "function 62",
        "func": "msg.payload= \"Erfassung\"\nflow.set(\"FunktionStatus\", 1)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 2500,
        "wires": [
            [
                "5fc3610cd5e8e2e0",
                "fa2b33115440bce5"
            ]
        ]
    },
    {
        "id": "d999d788330db44c",
        "type": "function",
        "z": "1ffe3e95ef0562db",
        "name": "function 63",
        "func": "msg.payload= \"Ausgabe\"\nflow.set(\"FunktionStatus\", 2)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 2540,
        "wires": [
            [
                "5fc3610cd5e8e2e0",
                "fa2b33115440bce5"
            ]
        ]
    },
    {
        "id": "59fa3a5acf296427",
        "type": "ui_dropdown",
        "z": "1ffe3e95ef0562db",
        "name": "Dropdown Lagerort",
        "label": "Lagerort auswählen:",
        "tooltip": "",
        "place": "Select option",
        "group": "b5196438b63bee02",
        "order": 3,
        "width": 7,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 1150,
        "y": 680,
        "wires": [
            [
                "783e49b81ec07ea9",
                "d59c3d8081e9db4a",
                "4e2dd35054269e3b"
            ]
        ]
    },
    {
        "id": "783e49b81ec07ea9",
        "type": "function",
        "z": "1ffe3e95ef0562db",
        "name": "function 64",
        "func": "flow.set(\"StorLocations\", msg.payload)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1350,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "d59c3d8081e9db4a",
        "type": "debug",
        "z": "1ffe3e95ef0562db",
        "name": "debug 64",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1340,
        "y": 640,
        "wires": []
    },
    {
        "id": "8c7d1041d293ffe2",
        "type": "ui_button",
        "z": "1ffe3e95ef0562db",
        "name": "",
        "group": "1ef0514ec8cc871c",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Aktualisiere Lager",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 190,
        "y": 680,
        "wires": [
            [
                "62f98ffd3619a83d"
            ]
        ]
    },
    {
        "id": "8f2b52501f1f0f82",
        "type": "ui_button",
        "z": "1ffe3e95ef0562db",
        "name": "",
        "group": "b5196438b63bee02",
        "order": 4,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "Liste anzeigen",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 240,
        "y": 840,
        "wires": [
            [
                "4ae123387b9c391f"
            ]
        ]
    },
    {
        "id": "ee3cc0674058c093",
        "type": "function",
        "z": "1ffe3e95ef0562db",
        "name": "Prepare Table",
        "func": "var options = [];\nlet length = msg.payload.length\nvar name\nvar gtin\nvar count\nvar bestbefore\nvar description\n\nif (msg.payload.length==0){\n    \n    return msg;\n}\n\nfor (let x = 0; x < length; x++) {\n    \n    name = msg.payload[x].name;\n    gtin = msg.payload[x].gtin;\n    if (msg.payload[x].attributes.length > 0) {\n        count = msg.payload[x].attributes[0].count ??0\n        bestbefore = msg.payload[x].attributes[0].bestBeforeDate ??\"-\"\n        description = msg.payload[x].description??\"\";\n    if (typeof bestbefore == \"undefined\"){\n        bestbefore=\"-\"\n        }\n      options.push({ \"Name\": name, \"Barcode\": gtin, \"Anzahl\": count, \"Ablaufdatum\":bestbefore ,\"Beschreibung\":description});    \n    } else {\n        description = msg.payload[x].description ?? \"\";\n        if (typeof bestbefore == \"undefined\") {\n            bestbefore = \"-\"\n        }\n     options.push({ \"Name\": name, \"Barcode\": gtin, \"Anzahl\": \"-\", \"Ablaufdatum\": \"-\", \"Beschreibung\": description });\n\n    }\n\n    if (msg.payload[x].attributes.length>1){\n\n        for (let y = 1; y < msg.payload[x].attributes.length; y++) {\n            count = msg.payload[x].attributes[y].count??0\n            \n            bestbefore = msg.payload[x].attributes[y].bestBeforeDate\n            if (typeof bestbefore == \"undefined\") {\n                bestbefore = \"-\"\n            }\n            options.push({ \"Name\": \"+\", \"Barcode\": \"+\", \"Anzahl\": count, \"Ablaufdatum\": bestbefore });\n        }\n    }\n\n }\nmsg = { payload: msg.payload.length };\nmsg.payload = options;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 840,
        "wires": [
            [
                "8edc9db8dc34cd4e",
                "d30e1e30aab7b219"
            ]
        ]
    },
    {
        "id": "d30e1e30aab7b219",
        "type": "debug",
        "z": "1ffe3e95ef0562db",
        "name": "debug 65",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1180,
        "y": 880,
        "wires": []
    },
    {
        "id": "7697b9297fdaa3c7",
        "type": "http request",
        "z": "1ffe3e95ef0562db",
        "name": "Get Stock Item",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 620,
        "y": 1060,
        "wires": [
            [
                "08d38da278114a84",
                "5c24d1e8636da195"
            ]
        ]
    },
    {
        "id": "3dd6b4fdef70771f",
        "type": "function",
        "z": "1ffe3e95ef0562db",
        "name": "Get Einzelartikel",
        "func": "var community = flow.get(\"ComID\")\nvar webside = flow.get(\"webside\")\nvar token = flow.get(\"token\")\nvar storage = flow.get(\"StorLocations\")\nvar gtin = flow.get(\"gtinalt\")||0\nvar datum = flow.get(\"MHDDatum\")\n\nif (msg.gtin[0] == \"G\") {\n    msg.url = webside + \"/stock/\" + community + \"/\" + flow.get(\"Gruppenlager\") ?? storage + \"/\" + msg.gtin;\n} else {\n    msg.url = webside + \"/stock/\" + community + \"/\" + storage + \"/\" + msg.gtin;\n}\n\n\n//   'https://staging.api.speisekammer.app/stock/VSIa7KKIsJkA65pqMnDE/32cuZkh3DK3C5Nf74CQm/5000112547825'\nmsg.headers = {};\nmsg.headers['Authorization'] = 'Bearer ' + token;\nflow.set(\"gtintemp\",msg.gtin);\nif(typeof datum!=\"undefined\"){\nif(msg.gtin==gtin){\ndatum.used=false;\n}else{\n    datum.fertig=false;\n    datum.tagfertig=false;\n    datum.monatfertig=false;\n    datum.jahrfertig=false;\n}\nflow.set(\"MHDDatum\", datum)\n}\nflow.set(\"gtinalt\", msg.gtin);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 1060,
        "wires": [
            [
                "7697b9297fdaa3c7",
                "6e3357bdcd37cad0"
            ]
        ]
    },
    {
        "id": "08d38da278114a84",
        "type": "debug",
        "z": "1ffe3e95ef0562db",
        "name": "debug 66",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 800,
        "y": 1020,
        "wires": []
    },
    {
        "id": "1a4c743082078bf9",
        "type": "function",
        "z": "1ffe3e95ef0562db",
        "name": "Vorbereitung Tabelle",
        "func": "if (typeof msg.payload.status != \"undefined\") {\n    msg.payload = [];\n  var  msg2 ={};\n  msg2.payload=\"Artikel nicht im Vorrat des Lagerortes\"\n    return [msg, msg2]\n}\n\n\nmsg.payload =[msg.payload];\n\nreturn [msg, null]",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 900,
        "wires": [
            [
                "ee3cc0674058c093"
            ],
            [
                "d1cbe54d65295eb6"
            ]
        ]
    },
    {
        "id": "ddc666ce23830fa3",
        "type": "link in",
        "z": "1ffe3e95ef0562db",
        "name": "link in 42",
        "links": [
            "de927cf5fb76b284",
            "fa2b33115440bce5",
            "bfbdf266d2175009"
        ],
        "x": 145,
        "y": 2500,
        "wires": [
            [
                "17b6ddbbef662139"
            ]
        ]
    },
    {
        "id": "01979198e1235e86",
        "type": "link in",
        "z": "1ffe3e95ef0562db",
        "name": "link in 43",
        "links": [
            "de927cf5fb76b284",
            "fa2b33115440bce5",
            "bfbdf266d2175009"
        ],
        "x": 145,
        "y": 2540,
        "wires": [
            [
                "c0153d50bc28884f"
            ]
        ]
    },
    {
        "id": "fa2b33115440bce5",
        "type": "link out",
        "z": "1ffe3e95ef0562db",
        "name": "EingabeButton",
        "mode": "link",
        "links": [
            "ddc666ce23830fa3",
            "01979198e1235e86",
            "a00961795f35fc64",
            "fca07e830ff8c2a9",
            "01f4172636923fda",
            "852a052dbffc2899",
            "15e3437555f9baf9",
            "00876abb69010a2a",
            "1f46869b22fbca64"
        ],
        "x": 775,
        "y": 2560,
        "wires": []
    },
    {
        "id": "9a95362dc3166a9f",
        "type": "function",
        "z": "1ffe3e95ef0562db",
        "name": "Manage Function",
        "func": "var befehl = msg.payload.split(\":\")\nvar trigger = { };\nvar ddnlist = { };\nvar audio = { };\n\nswitch (befehl[0]) {\n    case \"$Erfassung\":\n        trigger.payload = true;\n        audio.payload= \"Artikel erfassen\"\n        ddnlist=null\n        flow.set(\"FunktionStatus\", 1)\n        return [trigger, audio, ddnlist]\n        break;\n     case \"$Inventur\":\n        trigger.payload = true;\n        audio.payload= \"Inventur\"\n        ddnlist=null\n        flow.set(\"FunktionStatus\", 10)\n        return [trigger, audio, ddnlist]\n        break;\n    case \"$Ausgabe\":\n        trigger.payload = true;\n        audio.payload = \"Artikel ausgaben\"\n        ddnlist = null\n        flow.set(\"FunktionStatus\", 2)\n        return [trigger, audio, ddnlist]\n        break;\n    case \"$Info\":\n        trigger.payload = true;\n        audio.payload = \"Info zu Artikel\"\n        ddnlist = null\n        flow.set(\"FunktionStatus\", 3)\n        return [trigger, audio, ddnlist]\n        break;\n    case \"$Loeschen\":\n        trigger.payload = true;\n        audio.payload = \"Artikel Löschen\"\n        ddnlist = null\n        flow.set(\"FunktionStatus\", 4)\n        return [trigger, audio, ddnlist]\n        break;\n    case \"$Lagerort\":\n        var lagerorte = flow.get(\"Lagerorte\")\n        trigger = null;\n        audio.payload = \"Lagerort \" + lagerorte[befehl[1]-1].name\n        ddnlist.payload = lagerorte[befehl[1]-1].id\n        return [trigger, audio, ddnlist]\n        break;\n\n    case \"$ArtikelOk\":\n        trigger.payload = \"ArtikelOk\";\n        audio = null\n        ddnlist = null\n        return [trigger, audio, ddnlist]\n        break;\n\n    case \"$SetAnlegen\":\n        trigger.payload = \"Set\";\n        audio = null\n        ddnlist = null\n        return [trigger, audio, ddnlist]\n        break;\n    \n    case \"$Gruppe\":\n        trigger.payload = \"Gruppe\";\n        audio = null\n        ddnlist = null\n        return [trigger, audio, ddnlist]\n        break;\n\n    default:\n        trigger = null;\n        audio.payload = \"Funktion wurde nicht erkannt\"\n        ddnlist = null\n        return [trigger, audio, ddnlist]\n}\n\n\n\n",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 1820,
        "wires": [
            [
                "de927cf5fb76b284"
            ],
            [
                "7445c97121efd05e",
                "0c27a57a1e0bb31a",
                "50ed66269a97a6c5"
            ],
            [
                "acd0c61d716ee707",
                "ba558820a4091fab"
            ]
        ]
    },
    {
        "id": "acd0c61d716ee707",
        "type": "link out",
        "z": "1ffe3e95ef0562db",
        "name": "StockNR",
        "mode": "link",
        "links": [
            "6c78762e736e7a3b"
        ],
        "x": 1065,
        "y": 1860,
        "wires": []
    },
    {
        "id": "6c78762e736e7a3b",
        "type": "link in",
        "z": "1ffe3e95ef0562db",
        "name": "link in 46",
        "links": [
            "acd0c61d716ee707"
        ],
        "x": 1035,
        "y": 720,
        "wires": [
            [
                "59fa3a5acf296427"
            ]
        ]
    },
    {
        "id": "ba558820a4091fab",
        "type": "debug",
        "z": "1ffe3e95ef0562db",
        "name": "debug 68",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1120,
        "y": 1900,
        "wires": []
    },
    {
        "id": "8f22ab67c7b2a55b",
        "type": "debug",
        "z": "1ffe3e95ef0562db",
        "name": "debug 69",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 700,
        "y": 1800,
        "wires": []
    },
    {
        "id": "6e3357bdcd37cad0",
        "type": "debug",
        "z": "1ffe3e95ef0562db",
        "name": "debug 70",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 560,
        "y": 980,
        "wires": []
    },
    {
        "id": "d3f6341d1910eb81",
        "type": "http request",
        "z": "1ffe3e95ef0562db",
        "name": "PUT Item",
        "method": "PUT",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1000,
        "y": 1180,
        "wires": [
            [
                "dcddfd0dd3635cb0",
                "06ecb184f6813bf6"
            ]
        ]
    },
    {
        "id": "380eb813d3b974ab",
        "type": "function",
        "z": "1ffe3e95ef0562db",
        "name": "Put Änderungen",
        "func": "var item = msg.payload\nvar msg = { payload: msg.payload.length };\nvar community = flow.get(\"ComID\")\nvar webside = flow.get(\"webside\")\nvar token = flow.get(\"token\")\nvar storage = flow.get(\"StorLocations\")\nvar status = flow.get(\"FunktionStatus\");\nvar bestbefore\nvar inventur\nvar items=1\nvar description \nvar group = {}\nvar msg2 = {}\n\n// Wenn Artikel nicht gefunden wird kommt ein status 404 zurück daher wird hier manuell\n// ein leeres Item gebaut\nif (typeof item.status != \"undefined\") {\n    item={};\n    item.notfound=true;\n    item.gtin=flow.get(\"gtintemp\");\n    item.name=\"unbekannter Artikel\"\n    item.attributes=[];\n    item.attributes.push({\"count\":0})\n}\n// Wenn es zum Item eine Beschreibung gibt (wenn die Beschreibung nicht nicht beschreiben ist)\n// und wenn an erste Position der Beschreibung ein { zu finden ist also ein JSON Objekt festgelegt wurde\nif ((typeof item.description !=\"undefined\") && item.description[0]==\"{\" && status !=99){\n    // Wenn dem so ist, dann wird das Json geparst und Objekt gebaut\nvar setinfo = JSON.parse(item.description ?? \"{ \\\"isset\\\": false, \\\"items\\\": 6, \\\"gtin\\\": \\\"13445\\\" , \\\"isingroup\\\": false , \\\"groupgtin\\\" : \\\"abc\\\"}\") // das hintere Objekt ist nur das der Parse nicht knallt\n    if(setinfo.isset){\n        item.gtin = setinfo.gtin ?? item.gtin // entweder es gibt schon ein Info das es ein set ist oder wenn das undefined oder null ist wird die Produkt gtin verwendet\n        items=setinfo.items??1  // auslesen wieviel Items im Set enthalten sind wenn nicht 1\n        group.isingrupe=setinfo.isingroup??false // Gehört der Artikel in eine Gruppe\n        group.gtin = (setinfo.groupgtin??\"Gabc\") // GroupGtin\n    }\n}\n\nflow.set(\"gtintemp\",null); // löschen des temporären gtins welcher gesetzt ist fals der Artiekel nicht bekannt ist ud ein 404 kommt\n\n//Anfrage vorbereiten\nif (item.gtin[0]==\"G\"){ // so soll ein Group Gtin aussehen, erster Buchstabe \"G\"\n    msg.url = webside + \"/stock/\" + community + \"/\" + flow.get(\"Gruppenlager\")??storage; // Wenn es eine Group gTin ist dann ab ins Gruppenlager\n} else {\n    msg.url = webside + \"/stock/\" + community + \"/\" + storage; // sonst das gespeicherte Lager nutzen\n}\n\n// Hier wird die Anfrage zusammen gebaut\nmsg.headers = {};\nmsg.headers['Authorization'] = 'Bearer ' + token;\n\n\n\n//Ab hier kommt die eigentliche Änderung eines bekannten Artikels\nvar attributanzahl = item.attributes.length \n\n// Status 1 Eingabe ######################################################################\nif (status == 1) {\n    var datum=flow.get(\"MHDDatum\")\n\n    if (typeof datum == \"undefined\"){\n       var datumv = false\n     }\n     else {\n        datumv=datum.fertig\n     }\n     // wenn vorher ein MHD gesetzt wurde wird es genutzt sonst gibts ein Objekt fals dran\n    if (datumv){ // wenn das datum fertig war\n         //datum.used=true; // markieren das das Datum genutzt wurde\n         for (let y = 0; y < attributanzahl; y++){ // durchlaufen aller attribute\n            if (typeof item.attributes[y].bestBeforeDate != \"undefined\") { // wenn ein bestbefore gesetzt ist\n              if (item.attributes[y].bestBeforeDate==datum.mhd){ // wenn das bestbefore gleich dem neu erfassten datum\n                  item.attributes[y].count = item.attributes[y].count + items;  // dann fügen wir hier die items hinzu (nicht nur eins da es ja ein set sein könnte)\n                    break;\n               } \n                 if (y == attributanzahl - 1 && item.attributes[y].bestBeforeDate != datum.mhd) { // wenn das gleiche Datum nicht gefunden wurde und wir schon an der letzten stelle sind\n                  item.attributes.push({ \"count\": items, \"bestBeforeDate\":datum.mhd }); // dann fügen wir ein neues Element der Liste hinzu und nutzten unser neues Datum\n                 break;\n                } \n             } else {\n           }\n             if (typeof item.attributes[y].bestBeforeDate == \"undefined\" && y == attributanzahl - 1)\n                item.attributes.push({ \"count\": items, \"bestBeforeDate\": datum.mhd }); // wir haben die ganze Liste durchsucht und sind beim letzten Eintrag angekommen, keiner stimmt überein also müssen wir einen neuen erzeugen\n         }\n     } else { // hier ist das Datum nicht eingegeben\n     bestbefore = item.attributes[attributanzahl-1].bestBeforeDate \n    if (typeof bestbefore == \"undefined\") { // bestbefore nicht definiert\n        \n            item.attributes[attributanzahl - 1].count = item.attributes[attributanzahl - 1].count + items;  // dann einfach hinzufügen\n    }\n    else{\n        \n            item.attributes.push({\"count\" :  items}); // sonst listenelement hinzu\n       \n    }\n     }\n    msg.payload = item; // Item an Payload dran\n\n    if (group.isingrupe){  //vvhbjhgvghj // haben wir eine Gruppe dann extrarunde\n        msg2.gtin = group.groupgtin\n        return [msg, msg2];  \n    } else {\n     return [msg, null];   // sonst raus an den request\n    }\n\n    \n}\n\n// Status 10 Inventur  ######################################################################\nif (status == 10) {\n    if (typeof item.description == \"undefined\") { // es gibt keine Beschreibung\n        item.description = \"{\\\"inventur\\\" :  \"+items+\"}\" // Beschreibung hinzufügen fertig\n    \n    } else if (item.description[0] == \"{\") { // es gibt etwas in der Beschreibung aber ist es auch ein Jason?\n        description = {} // ja ist Jason also Objekt bauen\n        description = JSON.parse(item.description) //Aus dem String ein Jason machen\n        if (typeof description.inventur == undefined) { //gibt es inventur im jason noch nicht\n            description.inventur = items; // ne dann hinzufügen\n        } else {\n            description.inventur = description.inventur+items // doch dann hinzufügen\n        }\n        item.description = JSON.stringify(description)\n    } else { // es gibt eien Description aber sie ist nur text\n        item.description = \"{\\\"text\\\" :  \\\"\" + item.description + \"\\\", \\\"inventur\\\": \"+items+\"\\\" }\" // Textwegschreiben und inventur hinzufügen\n    }\n     \n    msg.payload = item; // Item an Payload dran\n\n     return [msg, null];   //  raus an den request\n\n    }\n\n// Status 11 Inventurdaten löschen  ######################################################################\nif (status == 11 || status ==12) {\n\n    if (typeof item.description == \"undefined\") { // es gibt keine Beschreibung\n       return [] // es gibt nichts zu löschen\n\n    } else if (item.description[0] == \"{\") { // es gibt etwas in der Beschreibung aber ist es auch ein Jason?\n        description = {} // ja ist Jason also Objekt bauen\n        description = JSON.parse(item.description) //Aus dem String ein Jason machen\n        if (typeof description.inventur == undefined) { //gibt es inventur im jason noch nicht\n            return [] //dann gibts nix zu tun\n        } else {\n            description.inventur = null // sonst inventurdaten löschen\n        }\n        item.description = JSON.stringify(description)\n    } else { // es gibt eien Description aber sie ist nur text\n        item.description = \"{\\\"text\\\" :  \\\"\" + item.description + \"\\\", \\\"inventur\\\": }\" // Textwegschreiben und inventurdaten löschen\n    }\n\n    msg.payload = item; // Item an Payload dran\n    return [msg, null];   //  raus an den request\n}\n\n//Status 2 Ausgabe  ######################################################################\n if (status == 2) {\n     if (item.notfound??false ){\n         return null\n     }\n        item.attributes[0].count = item.attributes[0].count - 1;\n    if (item.attributes[0].count<1){\n        if (attributanzahl>1) {\n            item.attributes.shift();\n        } else {\n            item.attributes.shift();\n            item.attributes.push({ \"count\": 0 });\n        }\n        \n         }\n     msg.payload = item;\n     if (group.isingrupe) { //hgghjkjhgv\n        \n         msg2.gtin = group.groupgtin\n         return [msg, msg2];\n     } else {\n         return [msg, null];\n     }        \n} \n//Status 51 52 53 Bestätigung Artikel  ######################################################################\nif (status == 51||status==52 || status==53){\n      if ((typeof item.description != \"undefined\")) {\n          item.description = item.description.replace(\"Added by REST API via GTIN \"+ item.gtin,\"-\")\n      }\n    //  flow.set(\"FunktionStatus\",status-50); //rücksetzen auf alten Status\n      msg.payload = item;\n    return [msg, null];\n}\n\n//Status 61 63 Erzeuge Set  ######################################################################\nif (status == 61 || status == 63) {\n    if (typeof item.description == \"undefined\") {\n        item.description = \"{\\\"text\\\" :  \\\"\\\", \\\"isset\\\": false, \\\"items\\\": \" + (flow.get(\"SetItemAnzahl\") ?? \"1\")+\", \\\"gtin\\\": \\\"\" + (flow.get(\"SetGTIN\") ?? \"<setgtin>\")+\"\\\" }\"\n    } else if (item.description[0] == \"{\"){\n        description = {}\n        description=JSON.parse(item.description)\n        if (description.isset??false){\n            description.isset=false;\n        } else {\n        description.isset=true\n            description.items = flow.get(\"SetItemAnzahl\") ?? \"<itemanzahl>\"\n            description.gtin = flow.get(\"SetGTIN\")??\"<setgtin>\"\n        }\n        item.description = JSON.stringify(description)\n    } else {\n        item.description = \"{\\\"text\\\" :  \\\"\" + item.description + \"\\\", \\\"isset\\\": true, \\\"items\\\": \" + (flow.get(\"SetItemAnzahl\") ?? \"<itemanzahl>\") + \", \\\"gtin\\\": \\\"\" + (flow.get(\"SetGTIN\") ?? \"<setgtin>\")+\"\\\" }\"\n    }\n\n  //  flow.set(\"FunktionStatus\", status - 60); //rücksetzen auf alten Status\n    msg.payload = item;\n    return [msg, null];\n}\n\n//Status 71 73 Gruppe festlegen  ######################################################################\nif (status == 71 || status == 73) { // nur im Status Eingabe und Info\n    if (typeof item.description == \"undefined\") { // Wenn es keine Beschreibung gibt ist es einfach \n        item.description = \"{\\\"text\\\" :  \\\"\\\", \\\"isingroup\\\": false, \\\"groupgtin\\\": \\\"<setgtin>\\\" }\" // JSON in die Description fertig\n    } else if (item.description[0] == \"{\") { // irgendwas ist in der Description und es beginnt mit { also ein JSON Objekt\n            description = {}\n            description = JSON.parse(item.description)\n        if (description.isingroup ?? false) {\n            description.isingroup = false;\n        } else {\n            description.isingroup = true\n            description.groupgtin = \"<groupegtin>\"\n        }\n            item.description = JSON.stringify(description)\n        } else { // Description ist befüllt aber mit keinem Objekt\n        item.description = \"{\\\"text\\\" :  \\\"\" + item.description + \"\\\", \\\"isingroup\\\": true, \\\"groupgtin\\\": \\\"<setgtin>\\\" }\" // dann los wir machen ein JSOn Objekt draus\n        }\n\n    // flow.set(\"FunktionStatus\", status - 70); //rücksetzen auf alten Status\n    msg.payload = item;\n    return [msg, null];\n}\n\n//Status 81 83 Namen ändern  ######################################################################\nif (status == 81 || status == 83) { // nur im Status Eingabe und Info\n    item.name = flow.get(\"NewName\");\n\n  //  flow.set(\"FunktionStatus\", status - 80); //rücksetzen auf alten Status\n    msg.payload = item;\n    return [msg, null];\n}\n\n//Status 91 93 Beschreibung ändern  ######################################################################\nif (status == 91 || status == 93) { // nur im Status Eingabe und Info\n     var beschreibung = flow.get(\"New_Description\") ?? \"\"\n    if (typeof item.description == \"undefined\") { // Wenn es keine Beschreibung gibt ist es einfach \n        item.description = \"{\\\"note\\\" :  \\\"\" + beschreibung+\"\\\" }\" // JSON in die Description fertig\n    } else if (item.description[0] == \"{\") { // irgendwas ist in der Description und es beginnt mit { also ein JSON Objekt\n        description = {}\n        description = JSON.parse(item.description)\n        description.note =   beschreibung;\n        item.description = JSON.stringify(description)\n    } else { // Description ist befüllt aber mit keinem Objekt\n        item.description = \"{\\\"note\\\": \\\"\" + beschreibung + \"\\\", \\\"text\\\": \\\"\" + item.description +\"\\\"}\" // dann los wir machen ein JSOn Objekt draus\n    }\n    //  flow.set(\"FunktionStatus\", status - 90); //rücksetzen auf alten Status\n    msg.payload = item;\n    return [msg, null];\n}\n\n//Status 99 Beschreibung komplett löschen  ######################################################################\nif (status == 99) { // nur im Status Eingabe und Info\n    \n    if (typeof item.description == \"undefined\") { // Wenn es keine Beschreibung gibt ist es einfach \n        return ;\n  \n    } else { // Description ist befüllt \n        item.description = \"-\" // dann alles weg\n    }\n\n    msg.payload = item;\n    return [msg, null];\n}\n\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 1180,
        "wires": [
            [
                "d3f6341d1910eb81",
                "f21e2acf0c2476e3"
            ],
            [
                "7fd2871bd0c02cd7"
            ]
        ]
    },
    {
        "id": "dcddfd0dd3635cb0",
        "type": "debug",
        "z": "1ffe3e95ef0562db",
        "name": "debug 71",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1160,
        "y": 1140,
        "wires": []
    },
    {
        "id": "f21e2acf0c2476e3",
        "type": "debug",
        "z": "1ffe3e95ef0562db",
        "name": "debug 74",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1000,
        "y": 1140,
        "wires": []
    },
    {
        "id": "9d2ec851ef90b252",
        "type": "link out",
        "z": "1ffe3e95ef0562db",
        "name": "UpdateList",
        "mode": "link",
        "links": [
            "60e59021238d7401",
            "852a052dbffc2899",
            "4d9a59d007a705fa"
        ],
        "x": 1335,
        "y": 1160,
        "wires": []
    },
    {
        "id": "6b5a662848a1b1b0",
        "type": "ui_button",
        "z": "1ffe3e95ef0562db",
        "name": "",
        "group": "b5196438b63bee02",
        "order": 7,
        "width": 5,
        "height": 1,
        "passthru": false,
        "label": "Info",
        "tooltip": "",
        "color": "",
        "bgcolor": "{{msg.bgcolor}}",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 370,
        "y": 2580,
        "wires": [
            [
                "23f5dba7a78a0097"
            ]
        ]
    },
    {
        "id": "a00961795f35fc64",
        "type": "link in",
        "z": "1ffe3e95ef0562db",
        "name": "link in 48",
        "links": [
            "bfbdf266d2175009",
            "de927cf5fb76b284",
            "fa2b33115440bce5"
        ],
        "x": 145,
        "y": 2580,
        "wires": [
            [
                "a06f7d3d9d1be9b1"
            ]
        ]
    },
    {
        "id": "23f5dba7a78a0097",
        "type": "function",
        "z": "1ffe3e95ef0562db",
        "name": "function 71",
        "func": "msg.payload= \"Info\"\nflow.set(\"FunktionStatus\", 3)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 2580,
        "wires": [
            [
                "5fc3610cd5e8e2e0",
                "fa2b33115440bce5"
            ]
        ]
    },
    {
        "id": "17b6ddbbef662139",
        "type": "function",
        "z": "1ffe3e95ef0562db",
        "name": "Farbe",
        "func": "var status = flow.get(\"FunktionStatus\")||0;\nvar msg = { payload: msg.payload.length };\nif (status==1){\n   msg.bgcolor = \"lime\" \n} else {\n   msg.bgcolor = \"blub\" \n}\n    \nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 2500,
        "wires": [
            [
                "f7c747c519957b36"
            ]
        ]
    },
    {
        "id": "c0153d50bc28884f",
        "type": "function",
        "z": "1ffe3e95ef0562db",
        "name": "Farbe",
        "func": "var status = flow.get(\"FunktionStatus\")||0;\nvar msg = { payload: msg.payload.length };\nif (status==2){\n   msg.bgcolor = \"red\" \n} else {\n   msg.bgcolor = \"blub\" \n}\n    \nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 2540,
        "wires": [
            [
                "3fb4b9804586a482"
            ]
        ]
    },
    {
        "id": "a06f7d3d9d1be9b1",
        "type": "function",
        "z": "1ffe3e95ef0562db",
        "name": "Farbe",
        "func": "var status = flow.get(\"FunktionStatus\")||0;\nvar msg = { payload: msg.payload.length };\nif (status==3){\n   msg.bgcolor = \"yellow\" \n} else {\n   msg.bgcolor = \"blub\" \n}\n    \nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 2580,
        "wires": [
            [
                "6b5a662848a1b1b0"
            ]
        ]
    },
    {
        "id": "de927cf5fb76b284",
        "type": "link out",
        "z": "1ffe3e95ef0562db",
        "name": "EingabeButton2",
        "mode": "link",
        "links": [
            "ddc666ce23830fa3",
            "01979198e1235e86",
            "a00961795f35fc64",
            "fca07e830ff8c2a9",
            "01f4172636923fda",
            "9f5b10e528bf8f3d",
            "9eddf93a5405bceb",
            "f7a467125440195f",
            "15e3437555f9baf9",
            "00876abb69010a2a",
            "1f46869b22fbca64"
        ],
        "x": 1035,
        "y": 1740,
        "wires": []
    },
    {
        "id": "53b7d26813826bbb",
        "type": "link out",
        "z": "1ffe3e95ef0562db",
        "name": "hole Artikel",
        "mode": "link",
        "links": [
            "3fe38321abd0d3df"
        ],
        "x": 645,
        "y": 1760,
        "wires": []
    },
    {
        "id": "3fe38321abd0d3df",
        "type": "link in",
        "z": "1ffe3e95ef0562db",
        "name": "link in 49",
        "links": [
            "53b7d26813826bbb",
            "146e23fcc5cdd06b",
            "8b8d1fb876c6bf1e",
            "7fd2871bd0c02cd7",
            "38e777ce7714f079",
            "5ab013b7293a076a",
            "5777faa5008372cd",
            "24e20de737c19e94",
            "930d4611be2b0795",
            "08967757ed7ef1d5"
        ],
        "x": 235,
        "y": 1060,
        "wires": [
            [
                "3dd6b4fdef70771f"
            ]
        ]
    },
    {
        "id": "60e59021238d7401",
        "type": "link in",
        "z": "1ffe3e95ef0562db",
        "name": "",
        "links": [
            "9d2ec851ef90b252",
            "5c24d1e8636da195"
        ],
        "x": 695,
        "y": 900,
        "wires": [
            [
                "1a4c743082078bf9"
            ]
        ]
    },
    {
        "id": "06ecb184f6813bf6",
        "type": "function",
        "z": "1ffe3e95ef0562db",
        "name": "function 72",
        "func": "var msg2 = { payload: msg.payload.length };\nvar audio = {}\nvar status =flow.get(\"FunktionStatus\")\nvar unbekannterArtikel = {}\nvar item = msg.payload\n\n//Fehlerfall abfangen\nif (item.name.length<0??false)\n{\n  audio.payload=\"Es konnte keine Veränderung am Artikel durchgeführt werden.\"\n  return [null,audio]\n}\n\nswitch (status) {\n  case 1:\n  audio.payload=msg.payload.name + \" wurde hinzugefügt!\" \n  flow.set(\"SetArtikel\", { \"gtin\": msg.payload.gtin })\n  break;\n\n  case 10:\n  audio.payload=msg.payload.name + \" in Inventur!\" \n  flow.set(\"SetArtikel\", { \"gtin\": msg.payload.gtin })\n  break;\n\n  case 11:\n    audio.payload = msg.payload.name + \" Inventurdaten gelöscht!\"\n    flow.set(\"FunktionStatus\", 3) //wir wollen nicht noch mehr löschen also Status info\n    flow.set(\"SetArtikel\", { \"gtin\": msg.payload.gtin })\n    break;\n\n  case 12:\n    \n    flow.set(\"SetArtikel\", { \"gtin\": msg.payload.gtin })\n    flow.set(\"FunktionStatus\", 3) //wir wollen nicht noch mehr löschen also Status info\n    msg2.payload=true;\n    return [null, null, msg2]; //Artikelliste neu laden\n    break;\n\n    \n\n  case 2:\n  audio.payload = \"einmal \" + msg.payload.name + \" wurde entfernt!\"\n  break;\n\n  case 51:\n  case 52:\n  case 53:\n    flow.set(\"FunktionStatus\", status - 50);\n    audio.payload = msg.payload.name + \" bestätigt!\"\n  break;\n  \n  case 61:\n  case 63:\n    flow.set(\"FunktionStatus\", status - 60);\n     audio.payload = \"Set erfasst!\"\n  break;\n\n  case 71:\n  case 73:\n    flow.set(\"FunktionStatus\", status - 70);\n    audio.payload = \"Gruppe vorbereitet!\"\n  break;\n\n  case 81:\n  case 83:\n    flow.set(\"FunktionStatus\", status - 80);\n     audio.payload = \"Name angepasst!\"\n  break;\n\n  case 91:\n  case 93:\n    flow.set(\"FunktionStatus\", status - 90);\n    audio.payload = \"Beschreibung angepasst!\"\n    break;\n\n\n  case 99:\n    //flow.set(\"FunktionStatus\", status - 90);\n    audio.payload = \"Beschreibung gelöscht!\"\n    break;\n\n}\n\n\n\n\n\n\nif (typeof msg.payload.description != \"undefined\" && msg.payload.description.includes(\"Added by\")) {  \n  audio.payload = audio.payload + \" Artikel automatisch hinzugefügt.\"\n//&& (msg.payload.attributes[0].count == 1) - wenn die Ansage nur beim ersten mal erfolgen soll\n unbekannterArtikel.marked=true;\n unbekannterArtikel.gtin = msg.payload.gtin\n}\nflow.set(\"unbekannterArtikel\",unbekannterArtikel);\nmsg2.payload=item\nreturn [msg2,audio,null];",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1170,
        "y": 1180,
        "wires": [
            [
                "9d2ec851ef90b252",
                "244228991bb94831"
            ],
            [
                "b368eab61c48fb0b",
                "51936866122b7a69"
            ],
            [
                "9fca27eb4dd81255"
            ]
        ]
    },
    {
        "id": "244228991bb94831",
        "type": "debug",
        "z": "1ffe3e95ef0562db",
        "name": "debug 75",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1360,
        "y": 1120,
        "wires": []
    },
    {
        "id": "df295779fa79a315",
        "type": "http request",
        "z": "1ffe3e95ef0562db",
        "name": "Delete Stock Item",
        "method": "DELETE",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": true,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 950,
        "y": 1480,
        "wires": [
            [
                "5b9bbe80066d386b",
                "9e4328d44ec501b5"
            ]
        ]
    },
    {
        "id": "0e4b26b9eafb67f5",
        "type": "function",
        "z": "1ffe3e95ef0562db",
        "name": "Delete Einzelartikel",
        "func": "var community = flow.get(\"ComID\")\nvar webside = flow.get(\"webside\")\nvar token = flow.get(\"token\")\nvar storage = flow.get(\"StorLocations\")\nif (msg.payload==\"Cancel\"){\n    return null;\n}\nmsg.payload=\"\";\n\nmsg.url = webside + \"/stock/\" + community + \"/\" + storage + \"/\" + msg.gtin;\n//   'https://staging.api.speisekammer.app/stock/VSIa7KKIsJkA65pqMnDE/32cuZkh3DK3C5Nf74CQm/5000112547825'\nmsg.headers = {};\nmsg.headers['Authorization'] = 'Bearer ' + token;\n//flow.set(\"gtintemp\",msg.gtin);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 1480,
        "wires": [
            [
                "882ee44c1a824a62",
                "df295779fa79a315"
            ]
        ]
    },
    {
        "id": "65dedbb5c0e2b06f",
        "type": "debug",
        "z": "1ffe3e95ef0562db",
        "name": "debug 76",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1360,
        "y": 1460,
        "wires": []
    },
    {
        "id": "882ee44c1a824a62",
        "type": "debug",
        "z": "1ffe3e95ef0562db",
        "name": "debug 77",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 940,
        "y": 1440,
        "wires": []
    },
    {
        "id": "ec0b3dbb705e12fb",
        "type": "ui_toast",
        "z": "1ffe3e95ef0562db",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "Cancel",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 710,
        "y": 1360,
        "wires": [
            [
                "0e4b26b9eafb67f5",
                "b7685be3d869ca71"
            ]
        ]
    },
    {
        "id": "b7685be3d869ca71",
        "type": "debug",
        "z": "1ffe3e95ef0562db",
        "name": "debug 79",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 960,
        "y": 1360,
        "wires": []
    },
    {
        "id": "63dd94fa8191d1da",
        "type": "ui_toast",
        "z": "1ffe3e95ef0562db",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1410,
        "y": 540,
        "wires": []
    },
    {
        "id": "5b9bbe80066d386b",
        "type": "function",
        "z": "1ffe3e95ef0562db",
        "name": "function 73",
        "func": "if (msg.payload==\"\"){\nmsg.payload = \"Artikel erfolgreich gelöscht!\"\n} else {\n    msg.payload=\"Oh nein, da ist etwas schief gelaufen. Status: \" + msg.title +\" \"+msg.status\n} \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1170,
        "y": 1480,
        "wires": [
            [
                "65dedbb5c0e2b06f",
                "622f096e6324498b",
                "9071783160800e08",
                "c86aadaa9d8cc122"
            ]
        ]
    },
    {
        "id": "622f096e6324498b",
        "type": "ui_toast",
        "z": "1ffe3e95ef0562db",
        "position": "bottom right",
        "displayTime": "5",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1370,
        "y": 1420,
        "wires": []
    },
    {
        "id": "9071783160800e08",
        "type": "ui_audio",
        "z": "1ffe3e95ef0562db",
        "name": "",
        "group": "b5196438b63bee02",
        "voice": "Microsoft Katja - German (Germany)",
        "always": true,
        "x": 1340,
        "y": 1380,
        "wires": []
    },
    {
        "id": "c02c3231e1759e7d",
        "type": "ui_button",
        "z": "1ffe3e95ef0562db",
        "name": "",
        "group": "1ef0514ec8cc871c",
        "order": 10,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Artikel Löschen",
        "tooltip": "",
        "color": "",
        "bgcolor": "{{msg.bgcolor}}",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 400,
        "y": 2620,
        "wires": [
            [
                "e83c3013ab0a0040"
            ]
        ]
    },
    {
        "id": "fca07e830ff8c2a9",
        "type": "link in",
        "z": "1ffe3e95ef0562db",
        "name": "link in 50",
        "links": [
            "de927cf5fb76b284",
            "fa2b33115440bce5",
            "bfbdf266d2175009"
        ],
        "x": 145,
        "y": 2620,
        "wires": [
            [
                "e65ee95d2ab43a19"
            ]
        ]
    },
    {
        "id": "e83c3013ab0a0040",
        "type": "function",
        "z": "1ffe3e95ef0562db",
        "name": "function 74",
        "func": "msg.payload= \"Artikel Löschen\"\nflow.set(\"FunktionStatus\", 4)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 2620,
        "wires": [
            [
                "fa2b33115440bce5",
                "5fc3610cd5e8e2e0"
            ]
        ]
    },
    {
        "id": "e65ee95d2ab43a19",
        "type": "function",
        "z": "1ffe3e95ef0562db",
        "name": "Farbe",
        "func": "var status = flow.get(\"FunktionStatus\")||0;\nvar msg = { payload: msg.payload.length };\nif (status==4){\n   msg.bgcolor = \"red\" \n} else {\n   msg.bgcolor = \"blub\" \n}\n    \nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 2620,
        "wires": [
            [
                "c02c3231e1759e7d"
            ]
        ]
    },
    {
        "id": "a7d8bc011b9cb21d",
        "type": "function",
        "z": "1ffe3e95ef0562db",
        "name": "function 75",
        "func": "var item = msg.payload\nvar msg = { };\n\nvar msg2 = {  };\n\nvar status = flow.get(\"FunktionStatus\");\n\nif (typeof item.status != \"undefined\" && status==3) {\n    msg.payload=\"Der Artikel wurde in diesem Lager leider nicht gefunden!\"\n    flow.set(\"SetArtikel\", { \"gtin\": 0})\n    return [msg, null];\n}\n\nif (typeof item.status != \"undefined\" && status == 2) {\n    msg.payload = \"Der Artikel wurde in diesem Lager leider nicht gefunden und daher nicht gelöscht werden!\"\n    flow.set(\"SetArtikel\", { \"gtin\": 0 })\n    return [msg, null];\n}\n\nif (status == 3) {\n    var anzahl=0;\n    for (let y = 0; y < item.attributes.length; y++){\n        anzahl = anzahl + item.attributes[y].count\n    }\n\n    msg.payload = item.name + \" ist aktuell \" + anzahl + \" mal in diesem Lager vorhanden!\"\n    var unbekannterArtikel ={}\n    if (typeof item.description != \"undefined\" && item.description.includes(\"Added by\")) {\n        unbekannterArtikel.marked = true;\n        unbekannterArtikel.gtin = item.gtin\n    }\n    flow.set(\"SetArtikel\",{\"gtin\":item.gtin})\n    flow.set(\"unbekannterArtikel\", unbekannterArtikel);\n    return [msg, null];    \n}\n\nif (status==4){\n    msg.payload = \"Bitte bestätigen Sie auf dem Display das Sie den Artikel \" + item.name + \" wirklich löschen wollen!\"\n    msg2.gtin = item.gtin;\n    msg2.payload = \"Wollen Sie \" + item.name + \" - \" + item.gtin + \" wirklich löschen?\"\n    return [msg, msg2];\n}\n\n\n\n\n\n\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 1340,
        "wires": [
            [
                "49f51c844f72798d",
                "fbd771c30d619ec1"
            ],
            [
                "ec0b3dbb705e12fb"
            ]
        ]
    },
    {
        "id": "49f51c844f72798d",
        "type": "ui_audio",
        "z": "1ffe3e95ef0562db",
        "name": "",
        "group": "b5196438b63bee02",
        "voice": "Microsoft Katja - German (Germany)",
        "always": true,
        "x": 720,
        "y": 1300,
        "wires": []
    },
    {
        "id": "4e2dd35054269e3b",
        "type": "link out",
        "z": "1ffe3e95ef0562db",
        "name": "Tabellefuellen",
        "mode": "link",
        "links": [
            "c88746db718a1d74",
            "468b18f344701787"
        ],
        "x": 1295,
        "y": 720,
        "wires": []
    },
    {
        "id": "c88746db718a1d74",
        "type": "link in",
        "z": "1ffe3e95ef0562db",
        "name": "link in 51",
        "links": [
            "4e2dd35054269e3b",
            "c86aadaa9d8cc122",
            "5066ec24fab18f82",
            "9fca27eb4dd81255"
        ],
        "x": 305,
        "y": 880,
        "wires": [
            [
                "4ae123387b9c391f"
            ]
        ]
    },
    {
        "id": "197404187a8ccf14",
        "type": "debug",
        "z": "1ffe3e95ef0562db",
        "name": "debug 80",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 800,
        "y": 640,
        "wires": []
    },
    {
        "id": "7445c97121efd05e",
        "type": "ui_audio",
        "z": "1ffe3e95ef0562db",
        "name": "",
        "group": "b5196438b63bee02",
        "voice": "Microsoft Katja - German (Germany)",
        "always": true,
        "x": 1200,
        "y": 1820,
        "wires": []
    },
    {
        "id": "60cf09b6558a4b42",
        "type": "function",
        "z": "1ffe3e95ef0562db",
        "name": "Manage MHD",
        "func": "var befehl = msg.payload.split(\":\")\nvar anzeige = {  };\nvar audio = {  };\nvar datum = {}\ndatum = flow.get(\"MHDDatum\")??{\"tag\":\"00\", \"tagfertig\":false, \"monat\":\"00\", \"monatfertig\":false, \"jahr\":\"00\", \"jahrfertig\":false, \"monatlang\":\"\"};\n\nif (datum.used??true){\n    datum.tag = \"\";\n    datum.monat=\"\";\n    datum.jahr=\"\";\n}\n\nswitch (befehl[0]) {\n    case \"#Tag\":\n        datum.tag = befehl[1]\n        datum.tagfertig = true;\n        anzeige.payload = datum.tag + \".\"+datum.monat +\".\" +datum.jahr\n        audio.payload = datum.tag + \".\" + datum.monatlang + \".\" + datum.jahr\n        \n        break;\n    case \"#Monat\":\n        datum.monat = befehl[1]\n        datum.monatfertig = true;\n        switch(datum.monat){\n            case \"01\":\n                datum.monatlang=\"Januar\"\n                break;\n            case \"02\":\n                datum.monatlang = \"Februar\"\n                break;\n            case \"03\":\n                datum.monatlang = \"März\"\n                break;\n            case \"04\":\n                datum.monatlang = \"April\"\n                break;\n            case \"05\":\n                datum.monatlang = \"Mai\"\n                break;\n            case \"06\":\n                datum.monatlang = \"Juni\"\n                break;\n            case \"07\":\n                datum.monatlang = \"Juli\"\n                break;\n            case \"08\":\n                datum.monatlang = \"August\"\n                break;\n            case \"09\":\n                datum.monatlang = \"September\"\n                break;\n            case \"10\":\n                datum.monatlang = \"Oktober\"\n                break;\n            case \"11\":\n                datum.monatlang = \"November\"\n                break;\n            case \"12\":\n                datum.monatlang = \"Dezember\"\n                break;\n            default:\n                datum.monatlang = \"kein korrekter Monat angegeben\"\n                datum.monatfertig = false;\n\n        }\n        anzeige.payload = datum.tag + \".\" + datum.monat + \".\" + datum.jahr\n        audio.payload = datum.tag + \".\" + datum.monatlang + \".\" + datum.jahr\n       \n        break;\n    case \"#Jahr\":\n        datum.jahr = befehl[1]\n        datum.jahrfertig = true;\n        anzeige.payload = datum.tag + \".\" + datum.monat + \".\" + datum.jahr\n        audio.payload = datum.tag + \".\" + datum.monatlang + \".\" + datum.jahr\n        \n        break;\n\n    default:\n        anzeige.payload = \"Datum wurde nicht erkannt\"\n        audio.payload = \"Datum wurde nicht erkannt\"\n        \n        \n}\n\nif (datum.tagfertig&&datum.monatfertig&&datum.jahrfertig){\n    datum.fertig=true;\n    datum.used=false;\n    datum.mhd=datum.jahr+\"-\"+datum.monat+\"-\"+datum.tag\n    anzeige.payload = anzeige.payload + \" Datum vollständig erfasst\"\n}\nflow.set(\"MHDDatum\", datum)\n\nreturn [anzeige, audio]\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 2000,
        "wires": [
            [
                "836087f8a9dd1183"
            ],
            [
                "e70a72f022bb8805"
            ]
        ]
    },
    {
        "id": "e70a72f022bb8805",
        "type": "ui_audio",
        "z": "1ffe3e95ef0562db",
        "name": "",
        "group": "b5196438b63bee02",
        "voice": "Microsoft Katja - German (Germany)",
        "always": true,
        "x": 1100,
        "y": 2000,
        "wires": []
    },
    {
        "id": "836087f8a9dd1183",
        "type": "ui_toast",
        "z": "1ffe3e95ef0562db",
        "position": "bottom right",
        "displayTime": "5",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1130,
        "y": 1960,
        "wires": []
    },
    {
        "id": "51936866122b7a69",
        "type": "ui_audio",
        "z": "1ffe3e95ef0562db",
        "name": "",
        "group": "b5196438b63bee02",
        "voice": "Microsoft Katja - German (Germany)",
        "always": true,
        "x": 1420,
        "y": 1200,
        "wires": []
    },
    {
        "id": "1dd640d8be18edfd",
        "type": "file",
        "z": "1ffe3e95ef0562db",
        "name": "",
        "filename": "filename",
        "filenameType": "msg",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "utf8",
        "x": 800,
        "y": 280,
        "wires": [
            [
                "668a1ef7478613ac"
            ]
        ]
    },
    {
        "id": "bc7d82de9081bdd2",
        "type": "file in",
        "z": "1ffe3e95ef0562db",
        "name": "",
        "filename": "filename",
        "filenameType": "msg",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 440,
        "y": 460,
        "wires": [
            [
                "8a876ec0100e2e57"
            ]
        ]
    },
    {
        "id": "e2189cae130bd247",
        "type": "function",
        "z": "1ffe3e95ef0562db",
        "name": "function 76",
        "func": "var setupnr= flow.get(\"setupnr\")??0\nmsg.filename =\"~/setupspeisekammer/Setup\"+setupnr+\".json\"\nmsg.payload = ({\"url\":msg.url,\"token\":msg.payload});\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 280,
        "wires": [
            [
                "1dd640d8be18edfd"
            ]
        ]
    },
    {
        "id": "668a1ef7478613ac",
        "type": "debug",
        "z": "1ffe3e95ef0562db",
        "name": "debug 82",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1000,
        "y": 280,
        "wires": []
    },
    {
        "id": "5a632e1f87342489",
        "type": "debug",
        "z": "1ffe3e95ef0562db",
        "name": "debug 83",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 760,
        "y": 420,
        "wires": []
    },
    {
        "id": "8a876ec0100e2e57",
        "type": "json",
        "z": "1ffe3e95ef0562db",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 590,
        "y": 460,
        "wires": [
            [
                "5a632e1f87342489",
                "7f284e22ab75985e"
            ]
        ]
    },
    {
        "id": "7f58b16b11d25b2a",
        "type": "ui_button",
        "z": "1ffe3e95ef0562db",
        "name": "",
        "group": "1ef0514ec8cc871c",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Token eingeben",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "Bitte URL angeben:",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 100,
        "y": 220,
        "wires": [
            [
                "a5f357faf1d6dd71",
                "15f228b1a25d327d"
            ]
        ]
    },
    {
        "id": "6e255d8802cb2252",
        "type": "ui_dropdown",
        "z": "1ffe3e95ef0562db",
        "name": "",
        "label": "Setupauswahl",
        "tooltip": "",
        "place": "Select option",
        "group": "1ef0514ec8cc871c",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Setup 1 - Standard",
                "value": 0,
                "type": "num"
            },
            {
                "label": "Setup 2",
                "value": 1,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 180,
        "y": 400,
        "wires": [
            [
                "44f4a3684d0b23d1"
            ]
        ]
    },
    {
        "id": "44f4a3684d0b23d1",
        "type": "function",
        "z": "1ffe3e95ef0562db",
        "name": "Load Setup",
        "func": "flow.set(\"setupnr\", msg.payload)\nmsg.filename = \"/home/pi/setupspeisekammer/Setup\" + msg.payload + \".json\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 400,
        "wires": [
            [
                "bc7d82de9081bdd2"
            ]
        ]
    },
    {
        "id": "3cbcac0c03a82302",
        "type": "ui_toast",
        "z": "1ffe3e95ef0562db",
        "position": "prompt",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "Cancel",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 510,
        "y": 220,
        "wires": [
            [
                "5a061b29add70385"
            ]
        ]
    },
    {
        "id": "7aab27a6f7c94f71",
        "type": "ui_toast",
        "z": "1ffe3e95ef0562db",
        "position": "prompt",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "Cancel",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 370,
        "y": 300,
        "wires": [
            [
                "e2189cae130bd247",
                "edd7d834818019d5"
            ]
        ]
    },
    {
        "id": "5a061b29add70385",
        "type": "function",
        "z": "1ffe3e95ef0562db",
        "name": "function 77",
        "func": "msg.url=msg.payload\nmsg.payload=\"Bitte den Token eingeben:\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 300,
        "wires": [
            [
                "7aab27a6f7c94f71"
            ]
        ]
    },
    {
        "id": "9e4328d44ec501b5",
        "type": "debug",
        "z": "1ffe3e95ef0562db",
        "name": "debug 84",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1160,
        "y": 1440,
        "wires": []
    },
    {
        "id": "1606f4a4a55142b4",
        "type": "debug",
        "z": "1ffe3e95ef0562db",
        "name": "debug 85",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 760,
        "y": 1880,
        "wires": []
    },
    {
        "id": "583ae711b59d3c03",
        "type": "debug",
        "z": "1ffe3e95ef0562db",
        "name": "debug 86",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 780,
        "y": 1740,
        "wires": []
    },
    {
        "id": "9d60ed503aae4c04",
        "type": "comment",
        "z": "1ffe3e95ef0562db",
        "name": "Barcodeliste",
        "info": "[https://barcode.tec-it.com/de/]()\n\n$Erfassung\n$Inventur\n$Ausgabe\n$Info\n$Loeschen\n$Lagerort:1\n$Lagerort:2\n$Lagerort:3\n$Lagerort:4\n$Lagerort:5\n$Lagerort:6\n\n$Lagerort:7\n$Lagerort:8\n$Lagerort:9\n$Lagerort:10\n#Tag:01\n#Tag:02\n#Tag:03\n#Tag:04\n#Tag:05\n#Tag:06\n\n#Tag:07\n#Tag:08\n#Tag:09\n#Tag:10\n#Tag:11\n#Tag:12\n#Tag:13\n#Tag:14\n#Tag:15\n#Tag:16\n\n#Tag:17\n#Tag:18\n#Tag:19\n#Tag:20\n#Tag:21\n#Tag:22\n#Tag:23\n#Tag:24\n#Tag:25\n#Tag:26\n\n#Tag:27\n#Tag:28\n#Tag:29\n#Tag:30\n#Tag:31\n#Monat:01\n#Monat:02\n#Monat:03\n#Monat:04\n#Monat:05\n\n#Monat:06\n#Monat:07\n#Monat:08\n#Monat:09\n#Monat:10\n#Monat:11\n#Monat:12\n#Jahr:2024\n#Jahr:2025\n#Jahr:2026\n\n#Jahr:2027\n#Jahr:2028\n#Jahr:2029\n#Jahr:2030\n$ArtikelOk\n$SetAnlegen",
        "x": 310,
        "y": 80,
        "wires": []
    },
    {
        "id": "c86aadaa9d8cc122",
        "type": "link out",
        "z": "1ffe3e95ef0562db",
        "name": "Tabellefuellen",
        "mode": "link",
        "links": [
            "c88746db718a1d74",
            "852a052dbffc2899",
            "468b18f344701787"
        ],
        "x": 1315,
        "y": 1520,
        "wires": []
    },
    {
        "id": "5c24d1e8636da195",
        "type": "link out",
        "z": "1ffe3e95ef0562db",
        "name": "Linkout GetStock Item",
        "mode": "link",
        "links": [
            "805c69998cf2ba9c",
            "60e59021238d7401",
            "c2c9d54de2499761",
            "852a052dbffc2899",
            "4d9a59d007a705fa"
        ],
        "x": 765,
        "y": 1060,
        "wires": []
    },
    {
        "id": "c2c9d54de2499761",
        "type": "link in",
        "z": "1ffe3e95ef0562db",
        "name": "Linkin Put",
        "links": [
            "5c24d1e8636da195"
        ],
        "x": 465,
        "y": 1180,
        "wires": [
            [
                "7e4f771eaba062b8"
            ]
        ]
    },
    {
        "id": "805c69998cf2ba9c",
        "type": "link in",
        "z": "1ffe3e95ef0562db",
        "name": "Linkin Delete und Sound Out",
        "links": [
            "5c24d1e8636da195"
        ],
        "x": 355,
        "y": 1340,
        "wires": [
            [
                "a7d8bc011b9cb21d",
                "35ca4bc3873a1410"
            ]
        ]
    },
    {
        "id": "7288500be11d8fce",
        "type": "ui_button",
        "z": "1ffe3e95ef0562db",
        "name": "",
        "group": "b5196438b63bee02",
        "order": 12,
        "width": 5,
        "height": 1,
        "passthru": true,
        "label": "Artikel korrekt bestätigen",
        "tooltip": "",
        "color": "",
        "bgcolor": "{{msg.bgcolor}}",
        "className": "",
        "icon": "",
        "payload": "ArtikelOk",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 230,
        "y": 2300,
        "wires": [
            [
                "0f25a372c6708c87"
            ]
        ]
    },
    {
        "id": "146e23fcc5cdd06b",
        "type": "link out",
        "z": "1ffe3e95ef0562db",
        "name": "hole Artikel",
        "mode": "link",
        "links": [
            "3fe38321abd0d3df"
        ],
        "x": 685,
        "y": 2300,
        "wires": []
    },
    {
        "id": "0f25a372c6708c87",
        "type": "function",
        "z": "1ffe3e95ef0562db",
        "name": "Artikel bestätigen",
        "func": "if (msg.payload != \"ArtikelOk\") {\n    return [null, null]\n}\n\nvar unbekannterArtikel = flow.get(\"unbekannterArtikel\")\nvar audio ={}\nif (unbekannterArtikel.marked??false){\n    msg.gtin=unbekannterArtikel.gtin\n}else\n{\n    audio.payload=\"Der Artikel wurde nicht als unbekannt markiert und kann daher nicht bestätigt werden\"\nreturn [null, audio]\n}\nvar status = flow.get(\"FunktionStatus\");\n\n    switch (status) {\n        case 1:\n            flow.set(\"FunktionStatus\",51)\n            audio = null;\n            break;\n        case 2:\n            flow.set(\"FunktionStatus\", 52)\n            audio = null;\n            break;\n        case 3:\n            flow.set(\"FunktionStatus\", 53)\n            audio = null;\n            break;\n        case 4:\n            flow.set(\"FunktionStatus\", 3)\n            audio.payload = \"Im Status Löschen kann ein Artikel nicht bestätigt werden\";\n            break;\n        default:\n            audio.payload = \"Es wurde kein Status erkannt \" + status;\n    }\n\nreturn [msg, audio];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 2300,
        "wires": [
            [
                "146e23fcc5cdd06b"
            ],
            [
                "8cf3d1a644bc6dae"
            ]
        ]
    },
    {
        "id": "9644613ebaa69c4c",
        "type": "ui_button",
        "z": "1ffe3e95ef0562db",
        "name": "",
        "group": "b5196438b63bee02",
        "order": 14,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "Als Set deklarieren",
        "tooltip": "",
        "color": "",
        "bgcolor": "{{msg.bgcolor}}",
        "className": "",
        "icon": "",
        "payload": "Set",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 210,
        "y": 2240,
        "wires": [
            [
                "81d9ce06ea736cce"
            ]
        ]
    },
    {
        "id": "8b8d1fb876c6bf1e",
        "type": "link out",
        "z": "1ffe3e95ef0562db",
        "name": "hole Artikel",
        "mode": "link",
        "links": [
            "3fe38321abd0d3df"
        ],
        "x": 1685,
        "y": 2240,
        "wires": []
    },
    {
        "id": "81d9ce06ea736cce",
        "type": "function",
        "z": "1ffe3e95ef0562db",
        "name": "Artikel Set",
        "func": "if (msg.payload != \"Set\") {\n    return [null, null]\n}\n\nvar setArtikel = flow.get(\"SetArtikel\")\nvar audio = {}\nif (setArtikel.gtin!=0??false){\n    msg.gtin=setArtikel.gtin\n}else\n{\n    audio.payload=\"Der letzte Artikel wurde nicht richtig erkannt bitte erneut scannen\"\n    msg=null;\n    flow.set(\"FunktionStatus\", 3)\nreturn [null, audio]\n}\nvar status = flow.get(\"FunktionStatus\");\n\n    switch (status) {\n        case 1:\n            flow.set(\"FunktionStatus\",61)\n            audio.payload =\"Bitte das im Set enthaltene Produkt scannen\";\n            msg.payload = \"Bitte das im Set enthaltene Produkt scannen!\"\n            break;\n        case 2:\n            flow.set(\"FunktionStatus\", 3)\n            audio.payload = \"Im Status Ausgabe können keine Sets erfasst werden, wechsel auf Info\";\n            msg = null;\n            break;\n        case 3:\n            flow.set(\"FunktionStatus\", 63)\n            audio.payload = \"Bitte das im Set enthaltene Produkt scannen\";\n            msg.payload=\"Bitte das im Set enthaltene Produkt scannen!\"\n            break;\n        case 4:\n            flow.set(\"FunktionStatus\", 3)\n            msg = null;\n            audio.payload = \"Im Status Löschen können keine Sets erfasst werden, wechsel auf Info\";\n            break;\n        default:\n            audio.payload = \"Es wurde kein Status erkannt\";\n            return[null, audio];\n    }\n\nreturn [msg, audio];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 2240,
        "wires": [
            [
                "c9e1613c882dd28a",
                "48ece7ee4d00984b"
            ],
            [
                "81618511bf3ff4eb"
            ]
        ]
    },
    {
        "id": "fbd771c30d619ec1",
        "type": "debug",
        "z": "1ffe3e95ef0562db",
        "name": "debug 92",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 700,
        "y": 1260,
        "wires": []
    },
    {
        "id": "7e4f771eaba062b8",
        "type": "delay",
        "z": "1ffe3e95ef0562db",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 620,
        "y": 1180,
        "wires": [
            [
                "380eb813d3b974ab"
            ]
        ]
    },
    {
        "id": "7fd2871bd0c02cd7",
        "type": "link out",
        "z": "1ffe3e95ef0562db",
        "name": "hole Artikel",
        "mode": "link",
        "links": [
            "3fe38321abd0d3df"
        ],
        "x": 945,
        "y": 1240,
        "wires": []
    },
    {
        "id": "990ce4bf63347b9a",
        "type": "ui_button",
        "z": "1ffe3e95ef0562db",
        "name": "",
        "group": "1ef0514ec8cc871c",
        "order": 11,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Gruppenzuordnung vorbereiten",
        "tooltip": "",
        "color": "",
        "bgcolor": "{{msg.bgcolor}}",
        "className": "",
        "icon": "",
        "payload": "Gruppe",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 250,
        "y": 2160,
        "wires": [
            [
                "85ec0ec90e7df9b5"
            ]
        ]
    },
    {
        "id": "38e777ce7714f079",
        "type": "link out",
        "z": "1ffe3e95ef0562db",
        "name": "hole Artikel",
        "mode": "link",
        "links": [
            "3fe38321abd0d3df"
        ],
        "x": 685,
        "y": 2160,
        "wires": []
    },
    {
        "id": "85ec0ec90e7df9b5",
        "type": "function",
        "z": "1ffe3e95ef0562db",
        "name": "Artikel zu Gruppe",
        "func": "if (msg.payload!=\"Gruppe\"){\n    return [null, null]\n}\n\nvar setArtikel = flow.get(\"SetArtikel\")\nvar audio = {}\nif (setArtikel.gtin != 0 ?? false) {\n    msg.gtin = setArtikel.gtin\n} else {\n    audio.payload = \"Der letzte Artikel wurde nicht richtig erkannt bitte erneut scannen\"\n    flow.set(\"FunktionStatus\", 3)\n    return [null, audio]\n}\n\nvar status = flow.get(\"FunktionStatus\");\n\n    switch (status) {\n        case 1:\n            flow.set(\"FunktionStatus\",71)\n            //audio.payload=\"Gruppenzuordnung wird vorbereiet, muss angepasst werden\";\n            audio = null;\n            break;\n        case 2:\n            flow.set(\"FunktionStatus\", 3)\n            audio.payload = \"Im Status Ausgabe kann keine Gruppenvorbereitung durchgeführt werden, wechsel auf Info\";\n            break;\n        case 3:\n            flow.set(\"FunktionStatus\", 73)\n            //audio.payload = \"Gruppenzuordnung wird vorbereiet, muss angepasst werden\";\n            audio = null;\n            break;\n        case 4:\n            flow.set(\"FunktionStatus\", 3)\n            audio.payload = \"Im Status Löschen kann keine Gruppenvorbereitung durchgeführt werden, wechsel auf Info\";\n            break;\n        default:\n            audio.payload = \"Es wurde kein Status erkannt\";\n            return[null, audio];\n    }\n\nreturn [msg, audio];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 2160,
        "wires": [
            [
                "38e777ce7714f079"
            ],
            [
                "d7fe9c4b368f9cd0"
            ]
        ]
    },
    {
        "id": "f7a467125440195f",
        "type": "link in",
        "z": "1ffe3e95ef0562db",
        "name": "link in 54",
        "links": [
            "de927cf5fb76b284",
            "bfbdf266d2175009"
        ],
        "x": 365,
        "y": 2000,
        "wires": [
            [
                "85ec0ec90e7df9b5",
                "81d9ce06ea736cce",
                "0f25a372c6708c87"
            ]
        ]
    },
    {
        "id": "0c27a57a1e0bb31a",
        "type": "ui_toast",
        "z": "1ffe3e95ef0562db",
        "position": "bottom right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1210,
        "y": 1780,
        "wires": []
    },
    {
        "id": "46f5f16d77d7d706",
        "type": "comment",
        "z": "1ffe3e95ef0562db",
        "name": "ToDo",
        "info": "Inventurauswertung\n- hinzufügen zur Einkaufsliste\n\n",
        "x": 130,
        "y": 80,
        "wires": []
    },
    {
        "id": "e6922270bf4e45d3",
        "type": "ui_ui_control",
        "z": "1ffe3e95ef0562db",
        "name": "",
        "events": "change",
        "x": 680,
        "y": 2940,
        "wires": [
            []
        ]
    },
    {
        "id": "9dc2988cc49568dc",
        "type": "function",
        "z": "1ffe3e95ef0562db",
        "name": "function 78",
        "func": "msg = { payload: { \"group\": { \"close\": [\"Speisekammer_Standard\"] } } }\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 2860,
        "wires": [
            [
                "e6922270bf4e45d3"
            ]
        ]
    },
    {
        "id": "f732723d7a37196c",
        "type": "function",
        "z": "1ffe3e95ef0562db",
        "name": "function 79",
        "func": "msg = { payload: { \"group\": { \"open\": [\"Speisekammer_Standard\"] } } }\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 2940,
        "wires": [
            [
                "e6922270bf4e45d3"
            ]
        ]
    },
    {
        "id": "237b323f226672e5",
        "type": "ui_button",
        "z": "1ffe3e95ef0562db",
        "name": "",
        "group": "1ef0514ec8cc871c",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Close Group",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 210,
        "y": 2860,
        "wires": [
            [
                "9dc2988cc49568dc",
                "139cc31bb0107be0"
            ]
        ]
    },
    {
        "id": "d1a4ede670a895c8",
        "type": "ui_button",
        "z": "1ffe3e95ef0562db",
        "name": "",
        "group": "1ef0514ec8cc871c",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Open Group",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 210,
        "y": 2940,
        "wires": [
            [
                "f732723d7a37196c",
                "80f7b99124f9edf1"
            ]
        ]
    },
    {
        "id": "b68256d9ef55859f",
        "type": "link in",
        "z": "1ffe3e95ef0562db",
        "name": "close Group",
        "links": [
            "a5f357faf1d6dd71",
            "c9e1613c882dd28a",
            "ac4c4a12c290f4c1",
            "7d945b093dd37735"
        ],
        "x": 315,
        "y": 2840,
        "wires": [
            [
                "9dc2988cc49568dc",
                "139cc31bb0107be0"
            ]
        ]
    },
    {
        "id": "a1957464e760a693",
        "type": "link in",
        "z": "1ffe3e95ef0562db",
        "name": "open Group",
        "links": [
            "edd7d834818019d5",
            "3d0c834ecab55220",
            "5aa74d1112033f45",
            "b84b635dfb802555"
        ],
        "x": 315,
        "y": 2900,
        "wires": [
            [
                "f732723d7a37196c",
                "80f7b99124f9edf1"
            ]
        ]
    },
    {
        "id": "a5f357faf1d6dd71",
        "type": "link out",
        "z": "1ffe3e95ef0562db",
        "name": "link out 2",
        "mode": "link",
        "links": [
            "b68256d9ef55859f"
        ],
        "x": 315,
        "y": 160,
        "wires": []
    },
    {
        "id": "edd7d834818019d5",
        "type": "link out",
        "z": "1ffe3e95ef0562db",
        "name": "link out 3",
        "mode": "link",
        "links": [
            "a1957464e760a693"
        ],
        "x": 505,
        "y": 320,
        "wires": []
    },
    {
        "id": "0aa661f83e69dc80",
        "type": "ui_button",
        "z": "1ffe3e95ef0562db",
        "d": true,
        "name": "",
        "group": "1ef0514ec8cc871c",
        "order": 9,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Produktname ändern",
        "tooltip": "",
        "color": "",
        "bgcolor": "{{msg.bgcolor}}",
        "className": "",
        "icon": "",
        "payload": "Name",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 220,
        "y": 2120,
        "wires": [
            [
                "75a76af5e0a9bfe6"
            ]
        ]
    },
    {
        "id": "5ab013b7293a076a",
        "type": "link out",
        "z": "1ffe3e95ef0562db",
        "name": "hole Artikel",
        "mode": "link",
        "links": [
            "3fe38321abd0d3df"
        ],
        "x": 1375,
        "y": 2100,
        "wires": []
    },
    {
        "id": "75a76af5e0a9bfe6",
        "type": "function",
        "z": "1ffe3e95ef0562db",
        "name": "Artikel Name ändern",
        "func": "if (msg.payload!=\"Name\"){  // beenden wenn die Scanner Funktion nicht die richtige ist\n    return [null, null]\n}\n\nvar setArtikel = flow.get(\"SetArtikel\")\nvar audio = {}\nif (setArtikel.gtin != 0 ?? false) {\n    msg.gtin = setArtikel.gtin\n} else {\n    audio.payload = \"Der letzte Artikel wurde nicht richtig erkannt bitte erneut scannen\"\n    flow.set(\"FunktionStatus\", 3)\n    return [null, audio]\n}\n\nvar status = flow.get(\"FunktionStatus\");\n\n    switch (status) {\n        case 1:\n            flow.set(\"FunktionStatus\",81)\n            audio.payload=\"Bitte neuen Namen eingeben\";\n            msg.payload = \"Bitte neuen Namen eingeben\";\n            break;\n        case 2:\n            flow.set(\"FunktionStatus\", 3)\n            audio.payload = \"Im Status Ausgabe kann der Name nicht verändert werden, wechsel auf Info\";\n            msg = null\n            break;\n        case 3:\n            flow.set(\"FunktionStatus\", 83)\n            audio.payload = \"Bitte neuen Namen eingeben\";\n            msg.payload = \"Bitte neuen Namen eingeben\";\n            break;\n        case 4:\n            flow.set(\"FunktionStatus\", 3)\n            audio.payload = \"Im Status Löschen kann der Name nicht verändert werden, wechsel auf Info\";\n            msg = null;\n            break;\n        default:\n            audio.payload = \"Es wurde kein Status erkannt\";\n            return[null, audio];\n    }\n\nreturn [msg, audio];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 2120,
        "wires": [
            [
                "ac4c4a12c290f4c1",
                "5f79da73953d5e0b"
            ],
            [
                "1c92acfdf8b7c6f1"
            ]
        ]
    },
    {
        "id": "c9e1613c882dd28a",
        "type": "link out",
        "z": "1ffe3e95ef0562db",
        "name": "link out 4",
        "mode": "link",
        "links": [
            "b68256d9ef55859f"
        ],
        "x": 655,
        "y": 2220,
        "wires": []
    },
    {
        "id": "8dec8f85f641db5c",
        "type": "ui_toast",
        "z": "1ffe3e95ef0562db",
        "position": "prompt",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "Cancel",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 980,
        "y": 2240,
        "wires": [
            [
                "cf9740fa9251629b"
            ]
        ]
    },
    {
        "id": "cf9740fa9251629b",
        "type": "function",
        "z": "1ffe3e95ef0562db",
        "name": "Save Set GTIN",
        "func": "if (msg.payload== \"Cancel\"){\n    return null;\n}\n\nflow.set(\"SetGTIN\", msg.payload)\nmsg.payload = \"Anzahl Artikel im Set?\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1170,
        "y": 2240,
        "wires": [
            [
                "a04ba316d69ab967"
            ]
        ]
    },
    {
        "id": "3cfd79a32e6e9c5a",
        "type": "ui_toast",
        "z": "1ffe3e95ef0562db",
        "position": "prompt",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "Cancel",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1010,
        "y": 2100,
        "wires": [
            [
                "7450d797d2723bf8"
            ]
        ]
    },
    {
        "id": "7450d797d2723bf8",
        "type": "function",
        "z": "1ffe3e95ef0562db",
        "name": "Save New Name",
        "func": "if (msg.payload == \"Cancel\") {\n    return null;\n}\n\nvar setArtikel = flow.get(\"SetArtikel\")\n\nif (setArtikel.gtin != 0 ?? false) {\n    msg.gtin = setArtikel.gtin\n}\n\nflow.set(\"NewName\", msg.payload)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1210,
        "y": 2100,
        "wires": [
            [
                "5ab013b7293a076a",
                "5aa74d1112033f45",
                "ab5437d89ff89eaa"
            ]
        ]
    },
    {
        "id": "ac4c4a12c290f4c1",
        "type": "link out",
        "z": "1ffe3e95ef0562db",
        "name": "link out 5",
        "mode": "link",
        "links": [
            "b68256d9ef55859f"
        ],
        "x": 685,
        "y": 2060,
        "wires": []
    },
    {
        "id": "5aa74d1112033f45",
        "type": "link out",
        "z": "1ffe3e95ef0562db",
        "name": "link out 6",
        "mode": "link",
        "links": [
            "a1957464e760a693"
        ],
        "x": 1385,
        "y": 2060,
        "wires": []
    },
    {
        "id": "3d0c834ecab55220",
        "type": "link out",
        "z": "1ffe3e95ef0562db",
        "name": "link out 7",
        "mode": "link",
        "links": [
            "a1957464e760a693"
        ],
        "x": 1685,
        "y": 2200,
        "wires": []
    },
    {
        "id": "a04ba316d69ab967",
        "type": "ui_toast",
        "z": "1ffe3e95ef0562db",
        "position": "prompt",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "Cancel",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1340,
        "y": 2240,
        "wires": [
            [
                "11acfd14fabc7a0d"
            ]
        ]
    },
    {
        "id": "11acfd14fabc7a0d",
        "type": "function",
        "z": "1ffe3e95ef0562db",
        "name": "Save Item Anzahl",
        "func": "if (msg.payload == \"Cancel\") {\n    return null;\n}\n\nflow.set(\"SetItemAnzahl\", msg.payload)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1520,
        "y": 2240,
        "wires": [
            [
                "3d0c834ecab55220"
            ]
        ]
    },
    {
        "id": "5f79da73953d5e0b",
        "type": "delay",
        "z": "1ffe3e95ef0562db",
        "name": "",
        "pauseType": "delay",
        "timeout": "500",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 800,
        "y": 2100,
        "wires": [
            [
                "3cfd79a32e6e9c5a"
            ]
        ]
    },
    {
        "id": "48ece7ee4d00984b",
        "type": "delay",
        "z": "1ffe3e95ef0562db",
        "name": "",
        "pauseType": "delay",
        "timeout": "500",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 780,
        "y": 2240,
        "wires": [
            [
                "8dec8f85f641db5c"
            ]
        ]
    },
    {
        "id": "57c7764182d78123",
        "type": "debug",
        "z": "1ffe3e95ef0562db",
        "name": "debug 93",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1380,
        "y": 840,
        "wires": []
    },
    {
        "id": "d592cc7c6812e79c",
        "type": "inject",
        "z": "1ffe3e95ef0562db",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 620,
        "wires": [
            [
                "62f98ffd3619a83d"
            ]
        ]
    },
    {
        "id": "d1cbe54d65295eb6",
        "type": "ui_text",
        "z": "1ffe3e95ef0562db",
        "group": "b5196438b63bee02",
        "order": 8,
        "width": 8,
        "height": 2,
        "name": "",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1530,
        "y": 920,
        "wires": []
    },
    {
        "id": "9a95238e55954ee2",
        "type": "function",
        "z": "1ffe3e95ef0562db",
        "name": "function 80",
        "func": "flow.set(\"selectedArticle\", msg.payload.Barcode)\nflow.set(\"SetArtikel\", { \"gtin\": msg.payload.Barcode })\n\n\n\nif (msg.payload.Beschreibung.includes(\"Added by\")) {\n    var unbekannterArtikel = {}\n    unbekannterArtikel.marked = true;\n    unbekannterArtikel.gtin = msg.payload.Barcode\n\nflow.set(\"unbekannterArtikel\", unbekannterArtikel);\n}\n\nmsg.payload = (\"Name: \" + msg.payload.Name + \"<br/>\" + \" Barcode: \" + msg.payload.Barcode + \"<br/>\" + \" Anzahl: \" + msg.payload.Anzahl + \"<br/>\" + \" Beschreibung: \"+msg.payload.Beschreibung)??\"-\"\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1370,
        "y": 880,
        "wires": [
            [
                "d1cbe54d65295eb6"
            ]
        ]
    },
    {
        "id": "ab5437d89ff89eaa",
        "type": "debug",
        "z": "1ffe3e95ef0562db",
        "name": "debug 94",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1440,
        "y": 2140,
        "wires": []
    },
    {
        "id": "1c92acfdf8b7c6f1",
        "type": "link out",
        "z": "1ffe3e95ef0562db",
        "name": "link out 8",
        "mode": "link",
        "links": [
            "673ecb528db8d1a3",
            "852a052dbffc2899"
        ],
        "x": 735,
        "y": 2140,
        "wires": []
    },
    {
        "id": "673ecb528db8d1a3",
        "type": "link in",
        "z": "1ffe3e95ef0562db",
        "name": "audio",
        "links": [
            "1c92acfdf8b7c6f1",
            "d7fe9c4b368f9cd0",
            "81618511bf3ff4eb",
            "8cf3d1a644bc6dae",
            "a84505c975269766"
        ],
        "x": 725,
        "y": 2720,
        "wires": [
            [
                "5fc3610cd5e8e2e0"
            ]
        ]
    },
    {
        "id": "d7fe9c4b368f9cd0",
        "type": "link out",
        "z": "1ffe3e95ef0562db",
        "name": "link out 9",
        "mode": "link",
        "links": [
            "673ecb528db8d1a3",
            "852a052dbffc2899"
        ],
        "x": 725,
        "y": 2180,
        "wires": []
    },
    {
        "id": "81618511bf3ff4eb",
        "type": "link out",
        "z": "1ffe3e95ef0562db",
        "name": "link out 10",
        "mode": "link",
        "links": [
            "673ecb528db8d1a3",
            "852a052dbffc2899"
        ],
        "x": 655,
        "y": 2260,
        "wires": []
    },
    {
        "id": "8cf3d1a644bc6dae",
        "type": "link out",
        "z": "1ffe3e95ef0562db",
        "name": "link out 11",
        "mode": "link",
        "links": [
            "673ecb528db8d1a3",
            "852a052dbffc2899"
        ],
        "x": 685,
        "y": 2340,
        "wires": []
    },
    {
        "id": "5d3a90e87cbb5f23",
        "type": "function",
        "z": "1ffe3e95ef0562db",
        "name": "Artikel Name ändern",
        "func": "if (msg.payload!=\"Beschreibung\"){  // beenden wenn die Scanner Funktion nicht die richtige ist\n    return [null, null]\n}\n\nvar setArtikel = flow.get(\"SetArtikel\")\nvar audio = {}\nif (setArtikel.gtin != 0 ?? false) {\n    msg.gtin = setArtikel.gtin\n} else {\n    audio.payload = \"Der letzte Artikel wurde nicht richtig erkannt bitte erneut scannen\"\n    flow.set(\"FunktionStatus\", 3)\n    return [null, audio]\n}\n\nvar status = flow.get(\"FunktionStatus\");\n\n    switch (status) {\n        case 1:\n            flow.set(\"FunktionStatus\",91)\n            audio.payload=\"Bitte Beschreibung eingeben\";\n            msg.payload = \"Bitte Beschreibung eingeben\";\n            break;\n        case 2:\n            flow.set(\"FunktionStatus\", 3)\n            audio.payload = \"Im Status Ausgabe kann der Beschreibung nicht verändert werden, wechsel auf Info\";\n            msg = null\n            break;\n        case 3:\n            flow.set(\"FunktionStatus\", 93)\n            audio.payload = \"Bitte Beschreibung eingeben\";\n            msg.payload = \"Bitte Beschreibung eingeben\";\n            break;\n        case 4:\n            flow.set(\"FunktionStatus\", 3)\n            audio.payload = \"Im Status Löschen kann der Beschreibung nicht verändert werden, wechsel auf Info\";\n            msg = null;\n            break;\n        case 99:\n            flow.set(\"FunktionStatus\", 93)\n            audio.payload = \"Bitte Beschreibung eingeben\";\n            msg.payload = \"Bitte Beschreibung eingeben\";\n            break;\n        default:\n            audio.payload = \"Es wurde kein Status erkannt\";\n            return[null, audio];\n    }\n\nreturn [msg, audio];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 2420,
        "wires": [
            [
                "7d945b093dd37735",
                "feaf0d0ed9a21ac8"
            ],
            [
                "a84505c975269766"
            ]
        ]
    },
    {
        "id": "bef91682e7916245",
        "type": "ui_button",
        "z": "1ffe3e95ef0562db",
        "name": "",
        "group": "b5196438b63bee02",
        "order": 13,
        "width": 5,
        "height": 1,
        "passthru": false,
        "label": "Beschreibung hinzufügen",
        "tooltip": "",
        "color": "",
        "bgcolor": "{{msg.bgcolor}}",
        "className": "",
        "icon": "",
        "payload": "Beschreibung",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 230,
        "y": 2420,
        "wires": [
            [
                "5d3a90e87cbb5f23"
            ]
        ]
    },
    {
        "id": "7d945b093dd37735",
        "type": "link out",
        "z": "1ffe3e95ef0562db",
        "name": "link out 12",
        "mode": "link",
        "links": [
            "b68256d9ef55859f"
        ],
        "x": 755,
        "y": 2360,
        "wires": []
    },
    {
        "id": "feaf0d0ed9a21ac8",
        "type": "delay",
        "z": "1ffe3e95ef0562db",
        "name": "",
        "pauseType": "delay",
        "timeout": "500",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 800,
        "y": 2400,
        "wires": [
            [
                "8f6a9b82305188bb"
            ]
        ]
    },
    {
        "id": "a84505c975269766",
        "type": "link out",
        "z": "1ffe3e95ef0562db",
        "name": "link out 13",
        "mode": "link",
        "links": [
            "673ecb528db8d1a3",
            "852a052dbffc2899"
        ],
        "x": 735,
        "y": 2440,
        "wires": []
    },
    {
        "id": "8f6a9b82305188bb",
        "type": "ui_toast",
        "z": "1ffe3e95ef0562db",
        "position": "prompt",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "Cancel",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1010,
        "y": 2400,
        "wires": [
            [
                "3c57fbf342455a31"
            ]
        ]
    },
    {
        "id": "3c57fbf342455a31",
        "type": "function",
        "z": "1ffe3e95ef0562db",
        "name": "Save New Description",
        "func": "if (msg.payload == \"Cancel\") {\n    msg.payload=true\n    return [null,msg];\n}\n\nvar setArtikel = flow.get(\"SetArtikel\")\n\nif (setArtikel.gtin != 0 ?? false) {\n    msg.gtin = setArtikel.gtin\n}\n\nflow.set(\"New_Description\", msg.payload)\nreturn [msg, null];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1220,
        "y": 2400,
        "wires": [
            [
                "5777faa5008372cd",
                "b84b635dfb802555",
                "ab7e8e0a798e0fbc"
            ],
            [
                "b84b635dfb802555"
            ]
        ]
    },
    {
        "id": "5777faa5008372cd",
        "type": "link out",
        "z": "1ffe3e95ef0562db",
        "name": "hole Artikel",
        "mode": "link",
        "links": [
            "3fe38321abd0d3df"
        ],
        "x": 1375,
        "y": 2400,
        "wires": []
    },
    {
        "id": "b84b635dfb802555",
        "type": "link out",
        "z": "1ffe3e95ef0562db",
        "name": "link out 14",
        "mode": "link",
        "links": [
            "a1957464e760a693"
        ],
        "x": 1375,
        "y": 2480,
        "wires": []
    },
    {
        "id": "ab7e8e0a798e0fbc",
        "type": "debug",
        "z": "1ffe3e95ef0562db",
        "name": "debug 95",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1440,
        "y": 2440,
        "wires": []
    },
    {
        "id": "9c31d4c13b8fd134",
        "type": "delay",
        "z": "1ffe3e95ef0562db",
        "name": "",
        "pauseType": "delay",
        "timeout": "15",
        "timeoutUnits": "minutes",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 750,
        "y": 3060,
        "wires": [
            [
                "cc02e927e625b9df"
            ]
        ]
    },
    {
        "id": "94f550504fcf6fcf",
        "type": "function",
        "z": "1ffe3e95ef0562db",
        "name": "function 81",
        "func": "msg={}\nmsg.payload=true;\nmsg.reset=true;\nvar msg2 = {}\nmsg2.payload= true;\nreturn [msg, msg2] ;",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 3060,
        "wires": [
            [
                "9c31d4c13b8fd134"
            ],
            [
                "057abb1b74bf6a4e"
            ]
        ]
    },
    {
        "id": "cc02e927e625b9df",
        "type": "function",
        "z": "1ffe3e95ef0562db",
        "name": "function 82",
        "func": "var status = flow.get(\"FunktionStatus\") || 0;\n\nif (status==2){\n    return null\n}\n\nflow.set(\"FunktionStatus\", 2)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 3060,
        "wires": [
            [
                "bfbdf266d2175009"
            ]
        ]
    },
    {
        "id": "bfbdf266d2175009",
        "type": "link out",
        "z": "1ffe3e95ef0562db",
        "name": "EingabeButton2",
        "mode": "link",
        "links": [
            "ddc666ce23830fa3",
            "01979198e1235e86",
            "a00961795f35fc64",
            "fca07e830ff8c2a9",
            "01f4172636923fda",
            "9f5b10e528bf8f3d",
            "9eddf93a5405bceb",
            "f7a467125440195f",
            "15e3437555f9baf9",
            "00876abb69010a2a",
            "1f46869b22fbca64"
        ],
        "x": 1155,
        "y": 3060,
        "wires": []
    },
    {
        "id": "852a052dbffc2899",
        "type": "link in",
        "z": "1ffe3e95ef0562db",
        "name": "reset Status 2",
        "links": [
            "fa2b33115440bce5",
            "c86aadaa9d8cc122",
            "9d2ec851ef90b252",
            "5c24d1e8636da195",
            "a84505c975269766",
            "8cf3d1a644bc6dae",
            "81618511bf3ff4eb",
            "d7fe9c4b368f9cd0",
            "1c92acfdf8b7c6f1",
            "1420914f4cd04c3e",
            "5066ec24fab18f82",
            "9fca27eb4dd81255"
        ],
        "x": 145,
        "y": 3100,
        "wires": [
            [
                "94f550504fcf6fcf"
            ]
        ]
    },
    {
        "id": "3f3fdb5f59add6cd",
        "type": "comment",
        "z": "1ffe3e95ef0562db",
        "name": "Reset \"Ausgabe\"",
        "info": "",
        "x": 200,
        "y": 2980,
        "wires": []
    },
    {
        "id": "057abb1b74bf6a4e",
        "type": "delay",
        "z": "1ffe3e95ef0562db",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 500,
        "y": 3100,
        "wires": [
            [
                "9c31d4c13b8fd134"
            ]
        ]
    },
    {
        "id": "cedd048d1dcc7439",
        "type": "inject",
        "z": "1ffe3e95ef0562db",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "10",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 3040,
        "wires": [
            [
                "94f550504fcf6fcf"
            ]
        ]
    },
    {
        "id": "4b136c92b6d6351d",
        "type": "inject",
        "z": "1ffe3e95ef0562db",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 750,
        "y": 3020,
        "wires": [
            [
                "cc02e927e625b9df"
            ]
        ]
    },
    {
        "id": "b0a39e1f5d93a2f5",
        "type": "comment",
        "z": "1ffe3e95ef0562db",
        "name": "Einkaufsliste",
        "info": "",
        "x": 150,
        "y": 3160,
        "wires": []
    },
    {
        "id": "02a0ee0e702a2277",
        "type": "http request",
        "z": "1ffe3e95ef0562db",
        "name": "Get Stock Item",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 440,
        "y": 3280,
        "wires": [
            [
                "4077d6be364d3d07",
                "1420914f4cd04c3e"
            ]
        ]
    },
    {
        "id": "cbdc517666019406",
        "type": "function",
        "z": "1ffe3e95ef0562db",
        "name": "Get Einkaufsliste",
        "func": "var community = flow.get(\"ComID\")\nvar webside = flow.get(\"webside\")\nvar token = flow.get(\"token\")\n\n\n    msg.url = webside + \"/errands/\" + community ;\n\nmsg.headers = {};\nmsg.headers['Authorization'] = 'Bearer ' + token;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 3280,
        "wires": [
            [
                "02a0ee0e702a2277",
                "b2c7db6d9bb6a375"
            ]
        ]
    },
    {
        "id": "4077d6be364d3d07",
        "type": "debug",
        "z": "1ffe3e95ef0562db",
        "name": "debug 96",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 3280,
        "wires": []
    },
    {
        "id": "b2c7db6d9bb6a375",
        "type": "debug",
        "z": "1ffe3e95ef0562db",
        "name": "debug 97",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 380,
        "y": 3200,
        "wires": []
    },
    {
        "id": "1420914f4cd04c3e",
        "type": "link out",
        "z": "1ffe3e95ef0562db",
        "name": "Linkout GetStock Item",
        "mode": "link",
        "links": [
            "852a052dbffc2899"
        ],
        "x": 585,
        "y": 3240,
        "wires": []
    },
    {
        "id": "15f228b1a25d327d",
        "type": "delay",
        "z": "1ffe3e95ef0562db",
        "name": "",
        "pauseType": "delay",
        "timeout": "120",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 300,
        "y": 220,
        "wires": [
            [
                "3cbcac0c03a82302"
            ]
        ]
    },
    {
        "id": "41e4f3ea4627ae89",
        "type": "debug",
        "z": "1ffe3e95ef0562db",
        "name": "debug 98",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 580,
        "y": 640,
        "wires": []
    },
    {
        "id": "2a6760aa560b3f11",
        "type": "debug",
        "z": "1ffe3e95ef0562db",
        "name": "debug 99",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 780,
        "y": 480,
        "wires": []
    },
    {
        "id": "5eda33bd8828e258",
        "type": "function",
        "z": "1ffe3e95ef0562db",
        "name": "function 83",
        "func": "\nvar communities = msg.payload\nflow.set(\"Communities\", communities);\nvar options = [];\nlet count = msg.payload.length\nvar name \nvar id\n\nfor (let x = 0; x < count; x++) {\n    name = msg.payload[x].name;\n    id = msg.payload[x].id;\n    options.push({ [name]: id }); \n      \n}\nmsg = { payload: msg.payload.length };\nmsg.info = communities[0].name;\nmsg.payload = communities[0].id;\nmsg.options=options;\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 540,
        "wires": [
            [
                "90f8b78cefc7c9d9"
            ]
        ]
    },
    {
        "id": "90f8b78cefc7c9d9",
        "type": "ui_dropdown",
        "z": "1ffe3e95ef0562db",
        "name": "Dropdown Lagerort",
        "label": "Haushalte auswählen:",
        "tooltip": "",
        "place": "Select option",
        "group": "1ef0514ec8cc871c",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 970,
        "y": 540,
        "wires": [
            [
                "1fab230c3d71f51f"
            ]
        ]
    },
    {
        "id": "1fab230c3d71f51f",
        "type": "function",
        "z": "1ffe3e95ef0562db",
        "name": "function 84",
        "func": "flow.set(\"ComID\", msg.payload)\n\nvar setupnummer = flow.get(\"setupnr\") + 1 ?? 0\nmsg.payload = \"Setup \" + setupnummer + \" und \" + \"Community \" + msg.info + \"geladen!\" \n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1170,
        "y": 540,
        "wires": [
            [
                "63dd94fa8191d1da",
                "62f98ffd3619a83d"
            ]
        ]
    },
    {
        "id": "8edc9db8dc34cd4e",
        "type": "ui_table",
        "z": "1ffe3e95ef0562db",
        "group": "b5196438b63bee02",
        "name": "",
        "order": 5,
        "width": 19,
        "height": 4,
        "columns": [
            {
                "field": "Name",
                "title": "Name",
                "width": "300",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Barcode",
                "title": "Barcode",
                "width": "120",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Anzahl",
                "title": "Anzahl",
                "width": "70",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Ablaufdatum",
                "title": "Ablaufdatum",
                "width": "110",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Beschreibung",
                "title": "Beschreibung",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 1,
        "cts": true,
        "x": 1210,
        "y": 840,
        "wires": [
            [
                "57c7764182d78123",
                "9a95238e55954ee2"
            ]
        ]
    },
    {
        "id": "b11eceb16f2679e9",
        "type": "ui_button",
        "z": "1ffe3e95ef0562db",
        "name": "",
        "group": "b5196438b63bee02",
        "order": 11,
        "width": 5,
        "height": 1,
        "passthru": false,
        "label": "Inventur",
        "tooltip": "",
        "color": "",
        "bgcolor": "{{msg.bgcolor}}",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 380,
        "y": 2460,
        "wires": [
            [
                "e998610ffb78324d"
            ]
        ]
    },
    {
        "id": "e998610ffb78324d",
        "type": "function",
        "z": "1ffe3e95ef0562db",
        "name": "function 85",
        "func": "msg.payload= \"Inventur\"\nflow.set(\"FunktionStatus\", 10)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 2460,
        "wires": [
            [
                "fa2b33115440bce5",
                "5fc3610cd5e8e2e0"
            ]
        ]
    },
    {
        "id": "15e3437555f9baf9",
        "type": "link in",
        "z": "1ffe3e95ef0562db",
        "name": "link in 55",
        "links": [
            "de927cf5fb76b284",
            "fa2b33115440bce5",
            "bfbdf266d2175009"
        ],
        "x": 145,
        "y": 2460,
        "wires": [
            [
                "2fa9cbfbb222837a"
            ]
        ]
    },
    {
        "id": "2fa9cbfbb222837a",
        "type": "function",
        "z": "1ffe3e95ef0562db",
        "name": "Farbe",
        "func": "var status = flow.get(\"FunktionStatus\")||0;\nvar msg = { payload: msg.payload.length };\nif (status==10){\n   msg.bgcolor = \"lime\" \n} else {\n   msg.bgcolor = \"blub\" \n}\n    \nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 2460,
        "wires": [
            [
                "b11eceb16f2679e9"
            ]
        ]
    },
    {
        "id": "3c08ba46d9d3ccb6",
        "type": "comment",
        "z": "1ffe3e95ef0562db",
        "name": "Inventurauswertung",
        "info": "",
        "x": 150,
        "y": 3440,
        "wires": []
    },
    {
        "id": "eea882ab77e21a37",
        "type": "inject",
        "z": "1ffe3e95ef0562db",
        "name": "ohne",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 150,
        "y": 3540,
        "wires": [
            [
                "9a7ed8fdd78caa67"
            ]
        ]
    },
    {
        "id": "9a7ed8fdd78caa67",
        "type": "function",
        "z": "1ffe3e95ef0562db",
        "name": "function 86",
        "func": "var community = flow.get(\"ComID\")\nvar webside = flow.get(\"webside\")\nvar token = flow.get(\"token\")\nvar storage = flow.get(\"StorLocations\")\n\nmsg.url = webside + \"/stock/\" + community + \"/\" + storage;\nmsg.headers = {};\nmsg.headers['Authorization'] = 'Bearer ' + token;\nmsg.task=msg.payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 3600,
        "wires": [
            [
                "bc0c90cd61b83578"
            ]
        ]
    },
    {
        "id": "1e909b3ad2db86d1",
        "type": "ui_button",
        "z": "1ffe3e95ef0562db",
        "name": "",
        "group": "b4daf2cc34335a6f",
        "order": 3,
        "width": 5,
        "height": 1,
        "passthru": false,
        "label": "Vergleich nur gescante Produkte",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "1",
        "payloadType": "num",
        "topic": "topic",
        "topicType": "msg",
        "x": 150,
        "y": 3580,
        "wires": [
            [
                "9a7ed8fdd78caa67"
            ]
        ]
    },
    {
        "id": "bc0c90cd61b83578",
        "type": "http request",
        "z": "1ffe3e95ef0562db",
        "name": "Get Stock",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 540,
        "y": 3600,
        "wires": [
            [
                "e99b36c386c8d01e",
                "bc535763021a99aa"
            ]
        ]
    },
    {
        "id": "e99b36c386c8d01e",
        "type": "debug",
        "z": "1ffe3e95ef0562db",
        "name": "debug 100",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 700,
        "y": 3580,
        "wires": []
    },
    {
        "id": "bc535763021a99aa",
        "type": "function",
        "z": "1ffe3e95ef0562db",
        "name": "Prepare Table Inventur",
        "func": "var options = [];\nlet length = msg.payload.length\nvar name\nvar gtin\nvar count\nvar bestbefore\nvar description\nvar anzahl =0;\n\nif (msg.payload.length==0){\n    \n    return msg;\n}\n\nfor (let x = 0; x < length; x++) {\n    \n    name = msg.payload[x].name;\n    gtin = msg.payload[x].gtin;\n\n    if (msg.payload[x].attributes.length > 0) {\n        for (let y = 0; y < msg.payload[x].attributes.length; y++) {\n            anzahl = anzahl+ msg.payload[x].attributes[y].count??0\n        }\n        if (typeof msg.payload[x].description == undefined) {\n            description = {}; \n        }  else {\n            try{  \n                description = JSON.parse(msg.payload[x].description) //Aus dem String ein Jason machen\n                } catch (e) {\n                description = {}; \n            } \n        }  \n \n        if (typeof description.inventur == \"undefined\" || description.inventur == null) { //gibt es inventur im jason noch nicht\n            if (msg.task == 2 ) {\n                options.push({ \"Name\": name, \"Barcode\": gtin, \"Anzahl\": anzahl, \"Inventur\": \"-\", \"Beschreibung\": msg.payload[x].description });\n                continue;\n             }\n            else {\n                continue;\n            }\n        }\n        if (description.inventur!=anzahl){\n            options.push({ \"Name\": name, \"Barcode\": gtin, \"Anzahl\": anzahl, \"Inventur\": description.inventur, \"Beschreibung\": msg.payload[x].description });\n\n        }\n        else{\n            if (msg.task == 3) {\n                options.push({ \"Name\": name, \"Barcode\": gtin, \"Anzahl\": anzahl, \"Inventur\": description.inventur, \"Beschreibung\": msg.payload[x].description });\n                continue;\n             }\n            else {\n                continue;\n            }\n        }\n    }\n    else {\n        continue;\n    }\n\n }\nmsg = { payload: msg.payload.length };\nmsg.payload = options;\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 3600,
        "wires": [
            [
                "a14b630a29c2748c",
                "9316c89d89f2a7c7"
            ]
        ]
    },
    {
        "id": "a14b630a29c2748c",
        "type": "ui_table",
        "z": "1ffe3e95ef0562db",
        "group": "b4daf2cc34335a6f",
        "name": "",
        "order": 2,
        "width": 19,
        "height": 4,
        "columns": [
            {
                "field": "Name",
                "title": "Name",
                "width": "300",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Barcode",
                "title": "Barcode",
                "width": "120",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Anzahl",
                "title": "Anzahl",
                "width": "70",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Inventur",
                "title": "Inventur",
                "width": "70",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Beschreibung",
                "title": "Beschreibung",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 1,
        "cts": true,
        "x": 1130,
        "y": 3600,
        "wires": [
            [
                "468e6dc0b0eb746a",
                "ac89127481da9817"
            ]
        ]
    },
    {
        "id": "9316c89d89f2a7c7",
        "type": "debug",
        "z": "1ffe3e95ef0562db",
        "name": "debug 101",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1100,
        "y": 3640,
        "wires": []
    },
    {
        "id": "c2509fcefb4e1beb",
        "type": "ui_text",
        "z": "1ffe3e95ef0562db",
        "group": "b4daf2cc34335a6f",
        "order": 5,
        "width": 9,
        "height": 2,
        "name": "",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1450,
        "y": 3680,
        "wires": []
    },
    {
        "id": "468e6dc0b0eb746a",
        "type": "debug",
        "z": "1ffe3e95ef0562db",
        "name": "debug 102",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1300,
        "y": 3600,
        "wires": []
    },
    {
        "id": "ac89127481da9817",
        "type": "function",
        "z": "1ffe3e95ef0562db",
        "name": "function 87",
        "func": "msg.payload = (\"Name: \" + msg.payload.Name + \"<br/>\" + \" Barcode: \" + msg.payload.Barcode + \"<br/>\" + \" Anzahl: \" + msg.payload.Anzahl + \"<br/>\" + \" Beschreibung: \"+msg.payload.Beschreibung)??\"-\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1290,
        "y": 3640,
        "wires": [
            [
                "c2509fcefb4e1beb"
            ]
        ]
    },
    {
        "id": "e4cce5046b3630f0",
        "type": "ui_button",
        "z": "1ffe3e95ef0562db",
        "name": "",
        "group": "b4daf2cc34335a6f",
        "order": 4,
        "width": 5,
        "height": 1,
        "passthru": false,
        "label": "Vergleich alle Produkte",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "2",
        "payloadType": "num",
        "topic": "topic",
        "topicType": "msg",
        "x": 140,
        "y": 3680,
        "wires": [
            [
                "9a7ed8fdd78caa67"
            ]
        ]
    },
    {
        "id": "84c289992e7db243",
        "type": "catch",
        "z": "1ffe3e95ef0562db",
        "name": "",
        "scope": [
            "bc535763021a99aa"
        ],
        "uncaught": false,
        "x": 870,
        "y": 3520,
        "wires": [
            [
                "63fa20c9f0df1525"
            ]
        ]
    },
    {
        "id": "63fa20c9f0df1525",
        "type": "debug",
        "z": "1ffe3e95ef0562db",
        "name": "debug 103",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1050,
        "y": 3520,
        "wires": []
    },
    {
        "id": "ea0c620f083cf8d4",
        "type": "function",
        "z": "1ffe3e95ef0562db",
        "name": "function 88",
        "func": "  var description\n  try{  \n     description = JSON.parse(msg.payload) \n \n} catch (e) {\n   description = {}; \n}\n\nmsg.payload=description\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 3940,
        "wires": [
            [
                "5d2835860b13c409"
            ]
        ]
    },
    {
        "id": "5d2835860b13c409",
        "type": "debug",
        "z": "1ffe3e95ef0562db",
        "name": "debug 104",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 570,
        "y": 3940,
        "wires": []
    },
    {
        "id": "0d5a9d187e58dfaf",
        "type": "inject",
        "z": "1ffe3e95ef0562db",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"Count\":2,\"text\":\"test\"}",
        "payloadType": "str",
        "x": 150,
        "y": 3940,
        "wires": [
            [
                "ea0c620f083cf8d4"
            ]
        ]
    },
    {
        "id": "4fe84ea57af440b1",
        "type": "inject",
        "z": "1ffe3e95ef0562db",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"Count\":2,\"text\":null}",
        "payloadType": "str",
        "x": 150,
        "y": 3980,
        "wires": [
            [
                "ea0c620f083cf8d4"
            ]
        ]
    },
    {
        "id": "2ee375cae0a700ae",
        "type": "inject",
        "z": "1ffe3e95ef0562db",
        "name": "mit",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 150,
        "y": 3640,
        "wires": [
            [
                "9a7ed8fdd78caa67"
            ]
        ]
    },
    {
        "id": "f1d6e6f0bdb61c71",
        "type": "inject",
        "z": "1ffe3e95ef0562db",
        "name": "alle ohne",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "3",
        "payloadType": "num",
        "x": 160,
        "y": 3720,
        "wires": [
            [
                "9a7ed8fdd78caa67"
            ]
        ]
    },
    {
        "id": "850b4a7c03feef11",
        "type": "ui_button",
        "z": "1ffe3e95ef0562db",
        "name": "",
        "group": "b4daf2cc34335a6f",
        "order": 6,
        "width": 5,
        "height": 1,
        "passthru": false,
        "label": "Alle Inventurisierten",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "3",
        "payloadType": "num",
        "topic": "topic",
        "topicType": "msg",
        "x": 110,
        "y": 3760,
        "wires": [
            [
                "9a7ed8fdd78caa67"
            ]
        ]
    },
    {
        "id": "dfb8eff9229a71fa",
        "type": "ui_button",
        "z": "1ffe3e95ef0562db",
        "name": "",
        "group": "b4daf2cc34335a6f",
        "order": 15,
        "width": 5,
        "height": 1,
        "passthru": false,
        "label": "Lösche Inventurdaten",
        "tooltip": "",
        "color": "",
        "bgcolor": "{{msg.bgcolor}}",
        "className": "",
        "icon": "",
        "payload": "1",
        "payloadType": "num",
        "topic": "topic",
        "topicType": "msg",
        "x": 420,
        "y": 2660,
        "wires": [
            [
                "51b72d3df5993c96"
            ]
        ]
    },
    {
        "id": "51b72d3df5993c96",
        "type": "function",
        "z": "1ffe3e95ef0562db",
        "name": "function 108",
        "func": "msg.payload = \"Inventurdaten Löschen\"\nflow.set(\"FunktionStatus\", 11)\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 2660,
        "wires": [
            [
                "fa2b33115440bce5",
                "5fc3610cd5e8e2e0"
            ]
        ]
    },
    {
        "id": "6e01d774237a8b44",
        "type": "function",
        "z": "1ffe3e95ef0562db",
        "name": "Farbe",
        "func": "var status = flow.get(\"FunktionStatus\")||0;\nvar msg = { payload: msg.payload.length };\nif (status==11){\n   msg.bgcolor = \"yellow\" \n} else {\n   msg.bgcolor = \"blub\" \n}\n    \nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 2660,
        "wires": [
            [
                "dfb8eff9229a71fa"
            ]
        ]
    },
    {
        "id": "00876abb69010a2a",
        "type": "link in",
        "z": "1ffe3e95ef0562db",
        "name": "link in 64",
        "links": [
            "bfbdf266d2175009",
            "de927cf5fb76b284",
            "fa2b33115440bce5"
        ],
        "x": 145,
        "y": 2660,
        "wires": [
            [
                "6e01d774237a8b44"
            ]
        ]
    },
    {
        "id": "6563712360720269",
        "type": "inject",
        "z": "1ffe3e95ef0562db",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 4080,
        "wires": [
            [
                "b160321eb6b1f4d6"
            ]
        ]
    },
    {
        "id": "b160321eb6b1f4d6",
        "type": "function",
        "z": "1ffe3e95ef0562db",
        "name": "function 110",
        "func": "for (let i = 0; i < 4; i++) {\n    msg.payload= \"Versuch \"+ i\n    node.send(msg)\n}\n\nreturn;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 4080,
        "wires": [
            [
                "5c271ff70e467f7d"
            ]
        ]
    },
    {
        "id": "5c271ff70e467f7d",
        "type": "telegrambot-notify",
        "z": "1ffe3e95ef0562db",
        "name": "",
        "bot": "be43bf6b.22928",
        "chatId": "1479464684",
        "message": "",
        "parseMode": "",
        "x": 600,
        "y": 4080,
        "wires": []
    },
    {
        "id": "d9027b51a6f76094",
        "type": "http request",
        "z": "1ffe3e95ef0562db",
        "name": "Get Stock",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 580,
        "y": 3800,
        "wires": [
            [
                "373626957a9bec66",
                "f730ac244605cecb"
            ]
        ]
    },
    {
        "id": "a799cadc07ca4f70",
        "type": "function",
        "z": "1ffe3e95ef0562db",
        "name": "function 111",
        "func": "var community = flow.get(\"ComID\")\nvar webside = flow.get(\"webside\")\nvar token = flow.get(\"token\")\nvar storage = flow.get(\"StorLocations\")\n\nmsg.url = webside + \"/stock/\" + community + \"/\" + storage;\nmsg.headers = {};\nmsg.headers['Authorization'] = 'Bearer ' + token;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 3800,
        "wires": [
            [
                "d9027b51a6f76094"
            ]
        ]
    },
    {
        "id": "15e894a1b538ede7",
        "type": "ui_button",
        "z": "1ffe3e95ef0562db",
        "name": "",
        "group": "1ef0514ec8cc871c",
        "order": 12,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "Alle Inventurdaten löschen",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "3",
        "payloadType": "num",
        "topic": "topic",
        "topicType": "msg",
        "x": 140,
        "y": 3800,
        "wires": [
            [
                "a799cadc07ca4f70"
            ]
        ]
    },
    {
        "id": "373626957a9bec66",
        "type": "debug",
        "z": "1ffe3e95ef0562db",
        "name": "debug 115",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 770,
        "y": 3740,
        "wires": []
    },
    {
        "id": "e49e668b4d85de7e",
        "type": "function",
        "z": "1ffe3e95ef0562db",
        "name": "function 112",
        "func": " \nif(msg.payload=\"OK\")\n {\n    for (let i = 0; i < msg.list.length; i++) {\n        flow.set(\"FunktionStatus\", 12)\n        msg.gtin=msg.list[i].gtin\n        node.send(msg)\n    }\n    \n\n }\n\n\nreturn ;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1130,
        "y": 3800,
        "wires": [
            [
                "63f98e0378fb6d6b",
                "930d4611be2b0795"
            ]
        ]
    },
    {
        "id": "47b82094ec75746a",
        "type": "ui_toast",
        "z": "1ffe3e95ef0562db",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "Cancel",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 950,
        "y": 3800,
        "wires": [
            [
                "e49e668b4d85de7e",
                "b9cbb290d6920f17"
            ]
        ]
    },
    {
        "id": "f730ac244605cecb",
        "type": "change",
        "z": "1ffe3e95ef0562db",
        "name": "",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "list",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Wirklich alle Inventurdaten des Ablageortes löschen?",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 770,
        "y": 3800,
        "wires": [
            [
                "47b82094ec75746a",
                "b9cbb290d6920f17"
            ]
        ]
    },
    {
        "id": "63f98e0378fb6d6b",
        "type": "debug",
        "z": "1ffe3e95ef0562db",
        "name": "debug 116",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1350,
        "y": 3740,
        "wires": []
    },
    {
        "id": "b9cbb290d6920f17",
        "type": "debug",
        "z": "1ffe3e95ef0562db",
        "name": "debug 117",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1150,
        "y": 3740,
        "wires": []
    },
    {
        "id": "930d4611be2b0795",
        "type": "link out",
        "z": "1ffe3e95ef0562db",
        "name": "hole Artikel",
        "mode": "link",
        "links": [
            "3fe38321abd0d3df"
        ],
        "x": 1305,
        "y": 3800,
        "wires": []
    },
    {
        "id": "9fca27eb4dd81255",
        "type": "link out",
        "z": "1ffe3e95ef0562db",
        "name": "Tabellefuellen",
        "mode": "link",
        "links": [
            "c88746db718a1d74",
            "852a052dbffc2899",
            "468b18f344701787"
        ],
        "x": 1315,
        "y": 1240,
        "wires": []
    },
    {
        "id": "cac61001e968282f",
        "type": "ui_button",
        "z": "1ffe3e95ef0562db",
        "name": "",
        "group": "b5196438b63bee02",
        "order": 9,
        "width": 1,
        "height": 2,
        "passthru": false,
        "label": "Send",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 1450,
        "y": 980,
        "wires": [
            [
                "6581a14a0392af9b"
            ]
        ]
    },
    {
        "id": "6581a14a0392af9b",
        "type": "function",
        "z": "1ffe3e95ef0562db",
        "name": "function 113",
        "func": "msg.gtin=flow.get(\"selectedArticle\")||0\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1650,
        "y": 980,
        "wires": [
            [
                "08967757ed7ef1d5",
                "ee9113f776f5eb88"
            ]
        ]
    },
    {
        "id": "08967757ed7ef1d5",
        "type": "link out",
        "z": "1ffe3e95ef0562db",
        "name": "hole Artikel",
        "mode": "link",
        "links": [
            "3fe38321abd0d3df"
        ],
        "x": 1755,
        "y": 980,
        "wires": []
    },
    {
        "id": "ee9113f776f5eb88",
        "type": "debug",
        "z": "1ffe3e95ef0562db",
        "name": "debug 118",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1810,
        "y": 940,
        "wires": []
    },
    {
        "id": "b368eab61c48fb0b",
        "type": "debug",
        "z": "1ffe3e95ef0562db",
        "name": "debug 119",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1450,
        "y": 1240,
        "wires": []
    },
    {
        "id": "50ed66269a97a6c5",
        "type": "debug",
        "z": "1ffe3e95ef0562db",
        "name": "debug 120",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1170,
        "y": 1720,
        "wires": []
    },
    {
        "id": "94a64673a322912d",
        "type": "ui_button",
        "z": "1ffe3e95ef0562db",
        "name": "",
        "group": "b5196438b63bee02",
        "order": 15,
        "width": 5,
        "height": 1,
        "passthru": false,
        "label": "Lösche Beschreibung",
        "tooltip": "",
        "color": "",
        "bgcolor": "{{msg.bgcolor}}",
        "className": "",
        "icon": "",
        "payload": "1",
        "payloadType": "num",
        "topic": "topic",
        "topicType": "msg",
        "x": 420,
        "y": 2700,
        "wires": [
            [
                "adde428c20416639"
            ]
        ]
    },
    {
        "id": "adde428c20416639",
        "type": "function",
        "z": "1ffe3e95ef0562db",
        "name": "function 114",
        "func": "msg.payload = \"Beschreibung Löschen\"\nflow.set(\"FunktionStatus\", 99)\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 2700,
        "wires": [
            [
                "fa2b33115440bce5",
                "5fc3610cd5e8e2e0"
            ]
        ]
    },
    {
        "id": "4e926d66a1b7cfb4",
        "type": "function",
        "z": "1ffe3e95ef0562db",
        "name": "Farbe",
        "func": "var status = flow.get(\"FunktionStatus\")||0;\nvar msg = { payload: msg.payload.length };\nif (status==99){\n   msg.bgcolor = \"red\" \n} else {\n   msg.bgcolor = \"blub\" \n}\n    \nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 2700,
        "wires": [
            [
                "94a64673a322912d"
            ]
        ]
    },
    {
        "id": "1f46869b22fbca64",
        "type": "link in",
        "z": "1ffe3e95ef0562db",
        "name": "link in 65",
        "links": [
            "bfbdf266d2175009",
            "de927cf5fb76b284",
            "fa2b33115440bce5"
        ],
        "x": 145,
        "y": 2700,
        "wires": [
            [
                "4e926d66a1b7cfb4"
            ]
        ]
    },
    {
        "id": "0c6a54fd8ef3c00b",
        "type": "ui_ui_control",
        "z": "1ffe3e95ef0562db",
        "name": "",
        "events": "change",
        "x": 1040,
        "y": 2940,
        "wires": [
            []
        ]
    },
    {
        "id": "139cc31bb0107be0",
        "type": "function",
        "z": "1ffe3e95ef0562db",
        "name": "function 115",
        "func": "msg = { payload: { \"group\": { \"close\": [\"Speisekammer_Inventur\"] } } }\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 2860,
        "wires": [
            [
                "0c6a54fd8ef3c00b"
            ]
        ]
    },
    {
        "id": "80f7b99124f9edf1",
        "type": "function",
        "z": "1ffe3e95ef0562db",
        "name": "function 116",
        "func": "msg = { payload: { \"group\": { \"open\": [\"Speisekammer_Inventur\"] } } }\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 2900,
        "wires": [
            [
                "0c6a54fd8ef3c00b"
            ]
        ]
    },
    {
        "id": "35ca4bc3873a1410",
        "type": "debug",
        "z": "1ffe3e95ef0562db",
        "name": "debug 121",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 490,
        "y": 1280,
        "wires": []
    },
    {
        "id": "5fd81023679b674e",
        "type": "ui_spacer",
        "z": "1ffe3e95ef0562db",
        "name": "spacer",
        "group": "1ef0514ec8cc871c",
        "order": 5,
        "width": 6,
        "height": 1
    },
    {
        "id": "9bbf65cafd529db3",
        "type": "ui_spacer",
        "z": "1ffe3e95ef0562db",
        "name": "spacer",
        "group": "1ef0514ec8cc871c",
        "order": 6,
        "width": 6,
        "height": 1
    },
    {
        "id": "f27581f7127cfdc8",
        "type": "ui_spacer",
        "z": "1ffe3e95ef0562db",
        "name": "spacer",
        "group": "b4daf2cc34335a6f",
        "order": 1,
        "width": 19,
        "height": 1
    },
    {
        "id": "94d8cd592773094f",
        "type": "ui_spacer",
        "z": "1ffe3e95ef0562db",
        "name": "spacer",
        "group": "b4daf2cc34335a6f",
        "order": 7,
        "width": 5,
        "height": 1
    },
    {
        "id": "b5196438b63bee02",
        "type": "ui_group",
        "name": "Standard",
        "tab": "6b1243d835d9c436",
        "order": 1,
        "disp": true,
        "width": "19",
        "collapse": true,
        "className": ""
    },
    {
        "id": "1ef0514ec8cc871c",
        "type": "ui_group",
        "name": "Setup",
        "tab": "6b1243d835d9c436",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "b4daf2cc34335a6f",
        "type": "ui_group",
        "name": "Inventur",
        "tab": "6b1243d835d9c436",
        "order": 3,
        "disp": true,
        "width": "19",
        "collapse": true,
        "className": ""
    },
    {
        "id": "be43bf6b.22928",
        "type": "telegrambot-config",
        "botname": "Smarthome",
        "usernames": "Grisu_Leipzig",
        "chatIds": "",
        "pollInterval": "300"
    },
    {
        "id": "6b1243d835d9c436",
        "type": "ui_tab",
        "name": "Speisekammer",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    }
]
